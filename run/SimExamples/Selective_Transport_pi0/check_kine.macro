void
check_kine(const char *fname1, const char *fname2)
{

  auto fin1 = TFile::Open(fname1);
  auto tin1 = (TTree*)fin1->Get("o2sim");
  auto tracks1 = new vector<o2::MCTrack>;
  tin1->SetBranchAddress("MCTrack", &tracks1);

  auto fin2 = TFile::Open(fname2);
  auto tin2 = (TTree*)fin2->Get("o2sim");
  auto tracks2 = new vector<o2::MCTrack>;
  auto head2 = new o2::dataformats::MCEventHeader;
  tin2->SetBranchAddress("MCEventHeader.", &head2);
  tin2->SetBranchAddress("MCTrack", &tracks2);

  bool isvalid;
  
  for (int iev2 = 0; iev2 < tin2->GetEntries(); ++iev2) {

    tin2->GetEntry(iev2);

    auto iev1 = head2->getInfo<int>("inputEventNumber", isvalid);
    tin1->GetEntry(iev1);
    
    std::cout << "--- event2 " << iev2 << ", event1 " << iev1 << ": "
	      << tracks1->size() << " " << tracks2->size() << std::endl;
    
    std::cout << "itrk" << " "
	      << "st1" << " "
	      << "st2" << "\t"
	      << "pdg" << "\t"
	      << "M1" << "\t"
	      << "M2" << "\t"
	      << "D1" << "\t"
	      << "D2" << "\t"
	      << std::endl;
    
    for (int itr = 0; itr < tracks1->size(); ++itr) {

      auto& t1 = tracks1->at(itr);
      auto& t2 = tracks2->at(itr);
      
      // check that the two tracks are identical
      if (t1.GetPdgCode() != t2.GetPdgCode() ||
	  t1.getMotherTrackId() != t2.getMotherTrackId() ||
	  t1.getSecondMotherTrackId() != t2.getSecondMotherTrackId()) {// ||
	//	  t1.getFirstDaughterTrackId() != t2.getFirstDaughterTrackId() ||
	//	  t1.getLastDaughterTrackId() != t2.getLastDaughterTrackId()) {
	std::cout << itr << " tracks are not identical " << std::endl;
      }
      
      std::cout << itr << " "
		<< t1.isPrimary() << t1.getToBeDone() << t1.getInhibited() << " "
		<< t2.isPrimary() << t2.getToBeDone() << t2.getInhibited() << "\t"
		<< t2.GetPdgCode() << "\t"
		<< t2.getMotherTrackId() << "\t"
		<< t2.getSecondMotherTrackId() << "\t"
		<< t2.getFirstDaughterTrackId() << "\t"
		<< t2.getLastDaughterTrackId() << "\t"
		<< std::endl;
      
    }
    
    for (int itr = tracks1->size(); itr < tracks2->size(); ++itr) {

      auto& t2 = tracks2->at(itr);
      
      std::cout << itr << " "
		<< "---" << " "
		<< t2.isPrimary() << t2.getToBeDone() << t2.getInhibited() << "\t"
		<< t2.GetPdgCode() << "\t"
		<< t2.getMotherTrackId() << "\t"
		<< t2.getSecondMotherTrackId() << "\t"
		<< t2.getFirstDaughterTrackId() << "\t"
		<< t2.getLastDaughterTrackId() << "\t"
		<< std::endl;
      
    }
    
  }
  
}
