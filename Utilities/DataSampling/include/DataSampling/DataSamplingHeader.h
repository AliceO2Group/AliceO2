// Copyright 2019-2020 CERN and copyright holders of ALICE O2.
// See https://alice-o2.web.cern.ch/copyright for details of the copyright holders.
// All rights not expressly granted are reserved.
//
// This software is distributed under the terms of the GNU General Public
// License v3 (GPL Version 3), copied verbatim in the file "COPYING".
//
// In applying this license CERN does not waive the privileges and immunities
// granted to it by virtue of its status as an Intergovernmental Organization
// or submit itself to any jurisdiction.

#ifndef ALICEO2_DATASAMPLINGHEADER_H
#define ALICEO2_DATASAMPLINGHEADER_H

/// \file DataSamplingHeader.h
/// \brief A declaration of O2 Data Sampling Header
///
/// \author Piotr Konopka, piotr.jan.konopka@cern.ch

/// @brief A header which contains some meta-data generated by Data Sampling

#include "Headers/DataHeader.h"

namespace o2::utilities
{

struct DataSamplingHeader : public header::BaseHeader {

  // static data for this header type/version
  static const uint32_t sVersion;
  static const o2::header::HeaderType sHeaderType;
  static const o2::header::SerializationMethod sSerializationMethod;

  static constexpr uint32_t deviceIDTypeSize = 16;

  using DeviceIDType = header::Descriptor<deviceIDTypeSize>;

  // Data Sampling header fields
  uint64_t sampleTimeUs = 0;
  uint32_t totalAcceptedMessages = 0;
  uint32_t totalEvaluatedMessages = 0;
  DeviceIDType deviceID = "";

  DataSamplingHeader();
  DataSamplingHeader(uint64_t _sampleTimeUs, uint32_t _totalAcceptedMessages, uint32_t _totalEvaluatedMessages, DeviceIDType _deviceID);
  DataSamplingHeader(const DataSamplingHeader&) = default;
  DataSamplingHeader& operator=(const DataSamplingHeader&) = default;

  static const DataSamplingHeader* Get(const BaseHeader* baseHeader);
};

} // namespace o2::utilities

#endif //ALICEO2_DATASAMPLINGHEADER_H
