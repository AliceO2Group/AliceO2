// Copyright 2019-2020 CERN and copyright holders of ALICE O2.
// See https://alice-o2.web.cern.ch/copyright for details of the copyright holders.
// All rights not expressly granted are reserved.
//
// This software is distributed under the terms of the GNU General Public
// License v3 (GPL Version 3), copied verbatim in the file "COPYING".
//
// In applying this license CERN does not waive the privileges and immunities
// granted to it by virtue of its status as an Intergovernmental Organization
// or submit itself to any jurisdiction.

///
/// GENERATED CODE ! DO NOT EDIT !
///

#include "CH.cxx"
void fillElec2DetCH8R(std::map<uint32_t, uint32_t>& e2d)
{
  add(e2d, 806, 8, 824, 0, 0);
  add(e2d, 806, 7, 824, 0, 1);
  add(e2d, 806, 4, 824, 2, 0);
  add(e2d, 806, 3, 824, 2, 1);
  add(e2d, 806, 1029, 824, 4, 0);
  add(e2d, 806, 1030, 824, 4, 1);
  add(e2d, 806, 1025, 824, 6, 0);
  add(e2d, 806, 1026, 824, 6, 1);
  add(e2d, 806, 106, 824, 1, 0);
  add(e2d, 806, 107, 824, 1, 1);
  add(e2d, 806, 108, 824, 1, 2);
  add(e2d, 806, 101, 824, 3, 0);
  add(e2d, 806, 102, 824, 3, 1);
  add(e2d, 806, 103, 824, 3, 2);
  add(e2d, 806, 1134, 824, 5, 0);
  add(e2d, 806, 1133, 824, 5, 1);
  add(e2d, 806, 1129, 824, 7, 0);
  add(e2d, 806, 1128, 824, 7, 1);
  add(e2d, 805, 111, 825, 1, 0);
  add(e2d, 805, 112, 825, 1, 1);
  add(e2d, 805, 113, 825, 1, 2);
  add(e2d, 805, 106, 825, 3, 0);
  add(e2d, 805, 107, 825, 3, 1);
  add(e2d, 805, 108, 825, 3, 2);
  add(e2d, 805, 101, 825, 5, 0);
  add(e2d, 805, 102, 825, 5, 1);
  add(e2d, 805, 103, 825, 5, 2);
  add(e2d, 805, 1139, 825, 0, 0);
  add(e2d, 805, 1138, 825, 0, 1);
  add(e2d, 805, 1134, 825, 2, 0);
  add(e2d, 805, 1133, 825, 2, 1);
  add(e2d, 805, 1129, 825, 4, 0);
  add(e2d, 805, 1128, 825, 4, 1);
  add(e2d, 805, 12, 826, 1, 0);
  add(e2d, 805, 11, 826, 1, 1);
  add(e2d, 805, 8, 826, 3, 0);
  add(e2d, 805, 7, 826, 3, 1);
  add(e2d, 805, 4, 826, 5, 0);
  add(e2d, 805, 3, 826, 5, 1);
  add(e2d, 805, 1033, 826, 0, 0);
  add(e2d, 805, 1034, 826, 0, 1);
  add(e2d, 805, 1029, 826, 2, 0);
  add(e2d, 805, 1030, 826, 2, 1);
  add(e2d, 805, 1025, 826, 4, 0);
  add(e2d, 805, 1026, 826, 4, 1);
  add(e2d, 804, 1, 827, 0, 0);
  add(e2d, 804, 2, 827, 0, 1);
  add(e2d, 804, 3, 827, 0, 2);
  add(e2d, 804, 4, 827, 0, 3);
  add(e2d, 804, 5, 827, 0, 4);
  add(e2d, 804, 116, 827, 2, 0);
  add(e2d, 804, 115, 827, 2, 1);
  add(e2d, 804, 114, 827, 2, 2);
  add(e2d, 804, 113, 827, 2, 3);
  add(e2d, 804, 112, 827, 2, 4);
  add(e2d, 804, 108, 827, 4, 0);
  add(e2d, 804, 107, 827, 4, 1);
  add(e2d, 804, 104, 827, 6, 0);
  add(e2d, 804, 103, 827, 6, 1);
  add(e2d, 804, 1033, 827, 1, 0);
  add(e2d, 804, 1032, 827, 1, 1);
  add(e2d, 804, 1031, 827, 1, 2);
  add(e2d, 804, 1030, 827, 1, 3);
  add(e2d, 804, 1133, 827, 3, 0);
  add(e2d, 804, 1134, 827, 3, 1);
  add(e2d, 804, 1135, 827, 3, 2);
  add(e2d, 804, 1129, 827, 5, 0);
  add(e2d, 804, 1130, 827, 5, 1);
  add(e2d, 804, 1125, 827, 7, 0);
  add(e2d, 804, 1126, 827, 7, 1);
  add(e2d, 804, 308, 828, 0, 0);
  add(e2d, 804, 307, 828, 0, 1);
  add(e2d, 804, 306, 828, 0, 2);
  add(e2d, 804, 305, 828, 0, 3);
  add(e2d, 804, 304, 828, 0, 4);
  add(e2d, 804, 211, 828, 2, 0);
  add(e2d, 804, 212, 828, 2, 1);
  add(e2d, 804, 213, 828, 2, 2);
  add(e2d, 804, 214, 828, 2, 3);
  add(e2d, 804, 215, 828, 2, 4);
  add(e2d, 804, 206, 828, 4, 0);
  add(e2d, 804, 207, 828, 4, 1);
  add(e2d, 804, 208, 828, 4, 2);
  add(e2d, 804, 201, 828, 6, 0);
  add(e2d, 804, 202, 828, 6, 1);
  add(e2d, 804, 203, 828, 6, 2);
  add(e2d, 804, 1325, 828, 1, 0);
  add(e2d, 804, 1326, 828, 1, 1);
  add(e2d, 804, 1327, 828, 1, 2);
  add(e2d, 804, 1243, 828, 3, 0);
  add(e2d, 804, 1242, 828, 3, 1);
  add(e2d, 804, 1241, 828, 3, 2);
  add(e2d, 804, 1240, 828, 3, 3);
  add(e2d, 804, 1234, 828, 5, 0);
  add(e2d, 804, 1233, 828, 5, 1);
  add(e2d, 804, 1229, 828, 7, 0);
  add(e2d, 804, 1228, 828, 7, 1);
  add(e2d, 803, 308, 808, 0, 0);
  add(e2d, 803, 307, 808, 0, 1);
  add(e2d, 803, 306, 808, 0, 2);
  add(e2d, 803, 305, 808, 0, 3);
  add(e2d, 803, 304, 808, 0, 4);
  add(e2d, 803, 316, 808, 2, 0);
  add(e2d, 803, 315, 808, 2, 1);
  add(e2d, 803, 314, 808, 2, 2);
  add(e2d, 803, 313, 808, 2, 3);
  add(e2d, 803, 312, 808, 2, 4);
  add(e2d, 803, 211, 808, 4, 0);
  add(e2d, 803, 212, 808, 4, 1);
  add(e2d, 803, 213, 808, 4, 2);
  add(e2d, 803, 214, 808, 4, 3);
  add(e2d, 803, 215, 808, 4, 4);
  add(e2d, 803, 206, 808, 1, 0);
  add(e2d, 803, 207, 808, 1, 1);
  add(e2d, 803, 208, 808, 1, 2);
  add(e2d, 803, 201, 808, 3, 0);
  add(e2d, 803, 202, 808, 3, 1);
  add(e2d, 803, 203, 808, 3, 2);
  add(e2d, 803, 1325, 809, 0, 0);
  add(e2d, 803, 1326, 809, 0, 1);
  add(e2d, 803, 1327, 809, 0, 2);
  add(e2d, 803, 1333, 809, 2, 0);
  add(e2d, 803, 1334, 809, 2, 1);
  add(e2d, 803, 1335, 809, 2, 2);
  add(e2d, 803, 1243, 809, 4, 0);
  add(e2d, 803, 1242, 809, 4, 1);
  add(e2d, 803, 1241, 809, 4, 2);
  add(e2d, 803, 1240, 809, 4, 3);
  add(e2d, 803, 1234, 809, 1, 0);
  add(e2d, 803, 1233, 809, 1, 1);
  add(e2d, 803, 1229, 809, 3, 0);
  add(e2d, 803, 1228, 809, 3, 1);
  add(e2d, 803, 1, 810, 0, 0);
  add(e2d, 803, 2, 810, 0, 1);
  add(e2d, 803, 3, 810, 0, 2);
  add(e2d, 803, 4, 810, 0, 3);
  add(e2d, 803, 5, 810, 0, 4);
  add(e2d, 803, 10, 810, 2, 0);
  add(e2d, 803, 11, 810, 2, 1);
  add(e2d, 803, 12, 810, 2, 2);
  add(e2d, 803, 13, 810, 2, 3);
  add(e2d, 803, 14, 810, 2, 4);
  add(e2d, 803, 116, 810, 4, 0);
  add(e2d, 803, 115, 810, 4, 1);
  add(e2d, 803, 114, 810, 4, 2);
  add(e2d, 803, 113, 810, 4, 3);
  add(e2d, 803, 112, 810, 4, 4);
  add(e2d, 803, 108, 810, 1, 0);
  add(e2d, 803, 107, 810, 1, 1);
  add(e2d, 803, 104, 810, 3, 0);
  add(e2d, 803, 103, 810, 3, 1);
  add(e2d, 803, 1033, 811, 0, 0);
  add(e2d, 803, 1032, 811, 0, 1);
  add(e2d, 803, 1031, 811, 0, 2);
  add(e2d, 803, 1030, 811, 0, 3);
  add(e2d, 803, 1042, 811, 2, 0);
  add(e2d, 803, 1041, 811, 2, 1);
  add(e2d, 803, 1040, 811, 2, 2);
  add(e2d, 803, 1039, 811, 2, 3);
  add(e2d, 803, 1133, 811, 4, 0);
  add(e2d, 803, 1134, 811, 4, 1);
  add(e2d, 803, 1135, 811, 4, 2);
  add(e2d, 803, 1129, 811, 1, 0);
  add(e2d, 803, 1130, 811, 1, 1);
  add(e2d, 803, 1125, 811, 3, 0);
  add(e2d, 803, 1126, 811, 3, 1);
  add(e2d, 802, 5, 812, 0, 0);
  add(e2d, 802, 4, 812, 0, 1);
  add(e2d, 802, 3, 812, 0, 2);
  add(e2d, 802, 2, 812, 0, 3);
  add(e2d, 802, 1, 812, 0, 4);
  add(e2d, 802, 10, 812, 2, 0);
  add(e2d, 802, 9, 812, 2, 1);
  add(e2d, 802, 8, 812, 2, 2);
  add(e2d, 802, 7, 812, 2, 3);
  add(e2d, 802, 6, 812, 2, 4);
  add(e2d, 802, 22, 812, 4, 0);
  add(e2d, 802, 21, 812, 4, 1);
  add(e2d, 802, 20, 812, 4, 2);
  add(e2d, 802, 19, 812, 4, 3);
  add(e2d, 802, 18, 812, 4, 4);
  add(e2d, 802, 27, 812, 6, 0);
  add(e2d, 802, 26, 812, 6, 1);
  add(e2d, 802, 25, 812, 6, 2);
  add(e2d, 802, 24, 812, 6, 3);
  add(e2d, 802, 23, 812, 6, 4);
  add(e2d, 802, 120, 812, 1, 0);
  add(e2d, 802, 119, 812, 1, 1);
  add(e2d, 802, 118, 812, 1, 2);
  add(e2d, 802, 117, 812, 1, 3);
  add(e2d, 802, 116, 812, 1, 4);
  add(e2d, 802, 112, 812, 3, 0);
  add(e2d, 802, 111, 812, 3, 1);
  add(e2d, 802, 110, 812, 3, 2);
  add(e2d, 802, 109, 812, 3, 3);
  add(e2d, 802, 108, 812, 3, 4);
  add(e2d, 802, 104, 812, 5, 0);
  add(e2d, 802, 103, 812, 5, 1);
  add(e2d, 802, 1039, 813, 0, 0);
  add(e2d, 802, 1040, 813, 0, 1);
  add(e2d, 802, 1041, 813, 0, 2);
  add(e2d, 802, 1035, 813, 2, 0);
  add(e2d, 802, 1036, 813, 2, 1);
  add(e2d, 802, 1037, 813, 2, 2);
  add(e2d, 802, 1038, 813, 2, 3);
  add(e2d, 802, 1056, 813, 4, 0);
  add(e2d, 802, 1057, 813, 4, 1);
  add(e2d, 802, 1058, 813, 4, 2);
  add(e2d, 802, 1052, 813, 6, 0);
  add(e2d, 802, 1053, 813, 6, 1);
  add(e2d, 802, 1054, 813, 6, 2);
  add(e2d, 802, 1055, 813, 6, 3);
  add(e2d, 802, 1137, 813, 1, 0);
  add(e2d, 802, 1138, 813, 1, 1);
  add(e2d, 802, 1139, 813, 1, 2);
  add(e2d, 802, 1129, 813, 3, 0);
  add(e2d, 802, 1130, 813, 3, 1);
  add(e2d, 802, 1131, 813, 3, 2);
  add(e2d, 802, 1125, 813, 5, 0);
  add(e2d, 802, 1126, 813, 5, 1);
  add(e2d, 802, 313, 832, 0, 0);
  add(e2d, 802, 314, 832, 0, 1);
  add(e2d, 802, 315, 832, 0, 2);
  add(e2d, 802, 316, 832, 0, 3);
  add(e2d, 802, 317, 832, 0, 4);
  add(e2d, 802, 308, 832, 2, 0);
  add(e2d, 802, 309, 832, 2, 1);
  add(e2d, 802, 310, 832, 2, 2);
  add(e2d, 802, 311, 832, 2, 3);
  add(e2d, 802, 312, 832, 2, 4);
  add(e2d, 802, 330, 832, 4, 0);
  add(e2d, 802, 331, 832, 4, 1);
  add(e2d, 802, 332, 832, 4, 2);
  add(e2d, 802, 333, 832, 4, 3);
  add(e2d, 802, 334, 832, 4, 4);
  add(e2d, 802, 325, 832, 6, 0);
  add(e2d, 802, 326, 832, 6, 1);
  add(e2d, 802, 327, 832, 6, 2);
  add(e2d, 802, 328, 832, 6, 3);
  add(e2d, 802, 329, 832, 6, 4);
  add(e2d, 802, 215, 832, 1, 0);
  add(e2d, 802, 216, 832, 1, 1);
  add(e2d, 802, 217, 832, 1, 2);
  add(e2d, 802, 218, 832, 1, 3);
  add(e2d, 802, 219, 832, 1, 4);
  add(e2d, 802, 206, 832, 3, 0);
  add(e2d, 802, 207, 832, 3, 1);
  add(e2d, 802, 208, 832, 3, 2);
  add(e2d, 802, 209, 832, 3, 3);
  add(e2d, 802, 210, 832, 3, 4);
  add(e2d, 802, 201, 832, 5, 0);
  add(e2d, 802, 202, 832, 5, 1);
  add(e2d, 802, 203, 832, 5, 2);
  add(e2d, 802, 1327, 833, 0, 0);
  add(e2d, 802, 1326, 833, 0, 1);
  add(e2d, 802, 1325, 833, 0, 2);
  add(e2d, 802, 1331, 833, 2, 0);
  add(e2d, 802, 1330, 833, 2, 1);
  add(e2d, 802, 1329, 833, 2, 2);
  add(e2d, 802, 1328, 833, 2, 3);
  add(e2d, 802, 1344, 833, 4, 0);
  add(e2d, 802, 1343, 833, 4, 1);
  add(e2d, 802, 1342, 833, 4, 2);
  add(e2d, 802, 1348, 833, 6, 0);
  add(e2d, 802, 1347, 833, 6, 1);
  add(e2d, 802, 1346, 833, 6, 2);
  add(e2d, 802, 1345, 833, 6, 3);
  add(e2d, 802, 1247, 833, 1, 0);
  add(e2d, 802, 1246, 833, 1, 1);
  add(e2d, 802, 1245, 833, 1, 2);
  add(e2d, 802, 1244, 833, 1, 3);
  add(e2d, 802, 1238, 833, 3, 0);
  add(e2d, 802, 1237, 833, 3, 1);
  add(e2d, 802, 1236, 833, 3, 2);
  add(e2d, 802, 1235, 833, 3, 3);
  add(e2d, 802, 1229, 833, 5, 0);
  add(e2d, 802, 1228, 833, 5, 1);
  add(e2d, 801, 403, 834, 0, 0);
  add(e2d, 801, 402, 834, 0, 1);
  add(e2d, 801, 401, 834, 0, 2);
  add(e2d, 801, 408, 834, 2, 0);
  add(e2d, 801, 407, 834, 2, 1);
  add(e2d, 801, 406, 834, 2, 2);
  add(e2d, 801, 405, 834, 2, 3);
  add(e2d, 801, 404, 834, 2, 4);
  add(e2d, 801, 413, 834, 4, 0);
  add(e2d, 801, 412, 834, 4, 1);
  add(e2d, 801, 411, 834, 4, 2);
  add(e2d, 801, 410, 834, 4, 3);
  add(e2d, 801, 409, 834, 4, 4);
  add(e2d, 801, 315, 834, 6, 0);
  add(e2d, 801, 314, 834, 6, 1);
  add(e2d, 801, 313, 834, 6, 2);
  add(e2d, 801, 312, 834, 6, 3);
  add(e2d, 801, 311, 834, 6, 4);
  add(e2d, 801, 320, 834, 1, 0);
  add(e2d, 801, 319, 834, 1, 1);
  add(e2d, 801, 318, 834, 1, 2);
  add(e2d, 801, 317, 834, 1, 3);
  add(e2d, 801, 316, 834, 1, 4);
  add(e2d, 801, 328, 834, 3, 0);
  add(e2d, 801, 329, 834, 3, 1);
  add(e2d, 801, 330, 834, 3, 2);
  add(e2d, 801, 331, 834, 3, 3);
  add(e2d, 801, 332, 834, 3, 4);
  add(e2d, 801, 216, 834, 5, 0);
  add(e2d, 801, 215, 834, 5, 1);
  add(e2d, 801, 214, 834, 5, 2);
  add(e2d, 801, 213, 834, 5, 3);
  add(e2d, 801, 212, 834, 5, 4);
  add(e2d, 801, 208, 834, 7, 0);
  add(e2d, 801, 207, 834, 7, 1);
  add(e2d, 801, 1330, 835, 0, 0);
  add(e2d, 801, 1331, 835, 0, 1);
  add(e2d, 801, 1332, 835, 0, 2);
  add(e2d, 801, 1333, 835, 0, 3);
  add(e2d, 801, 1334, 835, 0, 4);
  add(e2d, 801, 1325, 835, 2, 0);
  add(e2d, 801, 1326, 835, 2, 1);
  add(e2d, 801, 1327, 835, 2, 2);
  add(e2d, 801, 1328, 835, 2, 3);
  add(e2d, 801, 1329, 835, 2, 4);
  add(e2d, 801, 1349, 835, 4, 0);
  add(e2d, 801, 1350, 835, 4, 1);
  add(e2d, 801, 1351, 835, 4, 2);
  add(e2d, 801, 1345, 835, 6, 0);
  add(e2d, 801, 1346, 835, 6, 1);
  add(e2d, 801, 1347, 835, 6, 2);
  add(e2d, 801, 1348, 835, 6, 3);
  add(e2d, 801, 1360, 835, 1, 0);
  add(e2d, 801, 1359, 835, 1, 1);
  add(e2d, 801, 1358, 835, 1, 2);
  add(e2d, 801, 1357, 835, 1, 3);
  add(e2d, 801, 1233, 835, 3, 0);
  add(e2d, 801, 1234, 835, 3, 1);
  add(e2d, 801, 1235, 835, 3, 2);
  add(e2d, 801, 1229, 835, 5, 0);
  add(e2d, 801, 1230, 835, 5, 1);
  add(e2d, 801, 1225, 835, 7, 0);
  add(e2d, 801, 1226, 835, 7, 1);
  add(e2d, 801, 204, 836, 0, 0);
  add(e2d, 801, 203, 836, 0, 1);
  add(e2d, 801, 1, 836, 2, 0);
  add(e2d, 801, 0, 836, 2, 1);
  add(e2d, 801, 14, 836, 4, 0);
  add(e2d, 801, 15, 836, 4, 1);
  add(e2d, 801, 16, 836, 4, 2);
  add(e2d, 801, 17, 836, 4, 3);
  add(e2d, 801, 18, 836, 4, 4);
  add(e2d, 801, 9, 836, 6, 0);
  add(e2d, 801, 10, 836, 6, 1);
  add(e2d, 801, 11, 836, 6, 2);
  add(e2d, 801, 12, 836, 6, 3);
  add(e2d, 801, 13, 836, 6, 4);
  add(e2d, 801, 26, 836, 1, 0);
  add(e2d, 801, 25, 836, 1, 1);
  add(e2d, 801, 24, 836, 1, 2);
  add(e2d, 801, 23, 836, 1, 3);
  add(e2d, 801, 22, 836, 1, 4);
  add(e2d, 801, 111, 836, 3, 0);
  add(e2d, 801, 112, 836, 3, 1);
  add(e2d, 801, 113, 836, 3, 2);
  add(e2d, 801, 114, 836, 3, 3);
  add(e2d, 801, 115, 836, 3, 4);
  add(e2d, 801, 106, 836, 5, 0);
  add(e2d, 801, 107, 836, 5, 1);
  add(e2d, 801, 108, 836, 5, 2);
  add(e2d, 801, 101, 836, 7, 0);
  add(e2d, 801, 102, 836, 7, 1);
  add(e2d, 801, 103, 836, 7, 2);
  add(e2d, 801, 1028, 837, 0, 0);
  add(e2d, 801, 1027, 837, 0, 1);
  add(e2d, 801, 1026, 837, 0, 2);
  add(e2d, 801, 1032, 837, 2, 0);
  add(e2d, 801, 1031, 837, 2, 1);
  add(e2d, 801, 1030, 837, 2, 2);
  add(e2d, 801, 1029, 837, 2, 3);
  add(e2d, 801, 1043, 837, 4, 0);
  add(e2d, 801, 1044, 837, 4, 1);
  add(e2d, 801, 1045, 837, 4, 2);
  add(e2d, 801, 1143, 837, 1, 0);
  add(e2d, 801, 1142, 837, 1, 1);
  add(e2d, 801, 1141, 837, 1, 2);
  add(e2d, 801, 1140, 837, 1, 3);
  add(e2d, 801, 1134, 837, 3, 0);
  add(e2d, 801, 1133, 837, 3, 1);
  add(e2d, 801, 1129, 837, 5, 0);
  add(e2d, 801, 1128, 837, 5, 1);
  add(e2d, 800, 5, 600, 0, 0);
  add(e2d, 800, 4, 600, 0, 1);
  add(e2d, 800, 3, 600, 0, 2);
  add(e2d, 800, 2, 600, 0, 3);
  add(e2d, 800, 1, 600, 0, 4);
  add(e2d, 800, 10, 600, 2, 0);
  add(e2d, 800, 9, 600, 2, 1);
  add(e2d, 800, 8, 600, 2, 2);
  add(e2d, 800, 7, 600, 2, 3);
  add(e2d, 800, 6, 600, 2, 4);
  add(e2d, 800, 18, 600, 4, 0);
  add(e2d, 800, 19, 600, 4, 1);
  add(e2d, 800, 20, 600, 4, 2);
  add(e2d, 800, 21, 600, 4, 3);
  add(e2d, 800, 22, 600, 4, 4);
  add(e2d, 800, 116, 600, 1, 0);
  add(e2d, 800, 115, 600, 1, 1);
  add(e2d, 800, 114, 600, 1, 2);
  add(e2d, 800, 113, 600, 1, 3);
  add(e2d, 800, 112, 600, 1, 4);
  add(e2d, 800, 108, 600, 3, 0);
  add(e2d, 800, 107, 600, 3, 1);
  add(e2d, 800, 104, 600, 5, 0);
  add(e2d, 800, 103, 600, 5, 1);
  add(e2d, 800, 1039, 601, 0, 0);
  add(e2d, 800, 1040, 601, 0, 1);
  add(e2d, 800, 1041, 601, 0, 2);
  add(e2d, 800, 1035, 601, 2, 0);
  add(e2d, 800, 1036, 601, 2, 1);
  add(e2d, 800, 1037, 601, 2, 2);
  add(e2d, 800, 1038, 601, 2, 3);
  add(e2d, 800, 1050, 601, 4, 0);
  add(e2d, 800, 1049, 601, 4, 1);
  add(e2d, 800, 1048, 601, 4, 2);
  add(e2d, 800, 1047, 601, 4, 3);
  add(e2d, 800, 1133, 601, 1, 0);
  add(e2d, 800, 1134, 601, 1, 1);
  add(e2d, 800, 1135, 601, 1, 2);
  add(e2d, 800, 1129, 601, 3, 0);
  add(e2d, 800, 1130, 601, 3, 1);
  add(e2d, 800, 1125, 601, 5, 0);
  add(e2d, 800, 1126, 601, 5, 1);
  add(e2d, 800, 313, 602, 0, 0);
  add(e2d, 800, 314, 602, 0, 1);
  add(e2d, 800, 315, 602, 0, 2);
  add(e2d, 800, 316, 602, 0, 3);
  add(e2d, 800, 317, 602, 0, 4);
  add(e2d, 800, 308, 602, 2, 0);
  add(e2d, 800, 309, 602, 2, 1);
  add(e2d, 800, 310, 602, 2, 2);
  add(e2d, 800, 311, 602, 2, 3);
  add(e2d, 800, 312, 602, 2, 4);
  add(e2d, 800, 325, 602, 4, 0);
  add(e2d, 800, 324, 602, 4, 1);
  add(e2d, 800, 323, 602, 4, 2);
  add(e2d, 800, 322, 602, 4, 3);
  add(e2d, 800, 321, 602, 4, 4);
  add(e2d, 800, 211, 602, 1, 0);
  add(e2d, 800, 212, 602, 1, 1);
  add(e2d, 800, 213, 602, 1, 2);
  add(e2d, 800, 214, 602, 1, 3);
  add(e2d, 800, 215, 602, 1, 4);
  add(e2d, 800, 206, 602, 3, 0);
  add(e2d, 800, 207, 602, 3, 1);
  add(e2d, 800, 208, 602, 3, 2);
  add(e2d, 800, 201, 602, 5, 0);
  add(e2d, 800, 202, 602, 5, 1);
  add(e2d, 800, 203, 602, 5, 2);
  add(e2d, 800, 1327, 603, 0, 0);
  add(e2d, 800, 1326, 603, 0, 1);
  add(e2d, 800, 1325, 603, 0, 2);
  add(e2d, 800, 1331, 603, 2, 0);
  add(e2d, 800, 1330, 603, 2, 1);
  add(e2d, 800, 1329, 603, 2, 2);
  add(e2d, 800, 1328, 603, 2, 3);
  add(e2d, 800, 1342, 603, 4, 0);
  add(e2d, 800, 1343, 603, 4, 1);
  add(e2d, 800, 1344, 603, 4, 2);
  add(e2d, 800, 1243, 603, 1, 0);
  add(e2d, 800, 1242, 603, 1, 1);
  add(e2d, 800, 1241, 603, 1, 2);
  add(e2d, 800, 1240, 603, 1, 3);
  add(e2d, 800, 1234, 603, 3, 0);
  add(e2d, 800, 1233, 603, 3, 1);
  add(e2d, 800, 1229, 603, 5, 0);
  add(e2d, 800, 1228, 603, 5, 1);
  add(e2d, 825, 1, 576, 2, 0);
  add(e2d, 825, 0, 576, 2, 1);
  add(e2d, 825, 204, 576, 0, 0);
  add(e2d, 825, 203, 576, 0, 1);
  add(e2d, 825, 14, 576, 4, 0);
  add(e2d, 825, 15, 576, 4, 1);
  add(e2d, 825, 16, 576, 4, 2);
  add(e2d, 825, 17, 576, 4, 3);
  add(e2d, 825, 18, 576, 4, 4);
  add(e2d, 825, 9, 576, 6, 0);
  add(e2d, 825, 10, 576, 6, 1);
  add(e2d, 825, 11, 576, 6, 2);
  add(e2d, 825, 12, 576, 6, 3);
  add(e2d, 825, 13, 576, 6, 4);
  add(e2d, 825, 26, 576, 1, 0);
  add(e2d, 825, 25, 576, 1, 1);
  add(e2d, 825, 24, 576, 1, 2);
  add(e2d, 825, 23, 576, 1, 3);
  add(e2d, 825, 22, 576, 1, 4);
  add(e2d, 825, 111, 576, 3, 0);
  add(e2d, 825, 112, 576, 3, 1);
  add(e2d, 825, 113, 576, 3, 2);
  add(e2d, 825, 114, 576, 3, 3);
  add(e2d, 825, 115, 576, 3, 4);
  add(e2d, 825, 106, 576, 5, 0);
  add(e2d, 825, 107, 576, 5, 1);
  add(e2d, 825, 108, 576, 5, 2);
  add(e2d, 825, 101, 576, 7, 0);
  add(e2d, 825, 102, 576, 7, 1);
  add(e2d, 825, 103, 576, 7, 2);
  add(e2d, 825, 1028, 577, 0, 0);
  add(e2d, 825, 1027, 577, 0, 1);
  add(e2d, 825, 1026, 577, 0, 2);
  add(e2d, 825, 1029, 577, 2, 0);
  add(e2d, 825, 1030, 577, 2, 1);
  add(e2d, 825, 1031, 577, 2, 2);
  add(e2d, 825, 1032, 577, 2, 3);
  add(e2d, 825, 1043, 577, 4, 0);
  add(e2d, 825, 1044, 577, 4, 1);
  add(e2d, 825, 1045, 577, 4, 2);
  add(e2d, 825, 1143, 577, 1, 0);
  add(e2d, 825, 1142, 577, 1, 1);
  add(e2d, 825, 1141, 577, 1, 2);
  add(e2d, 825, 1140, 577, 1, 3);
  add(e2d, 825, 1134, 577, 3, 0);
  add(e2d, 825, 1133, 577, 3, 1);
  add(e2d, 825, 1129, 577, 5, 0);
  add(e2d, 825, 1128, 577, 5, 1);
  add(e2d, 825, 403, 578, 0, 0);
  add(e2d, 825, 402, 578, 0, 1);
  add(e2d, 825, 401, 578, 0, 2);
  add(e2d, 825, 408, 578, 2, 0);
  add(e2d, 825, 407, 578, 2, 1);
  add(e2d, 825, 406, 578, 2, 2);
  add(e2d, 825, 405, 578, 2, 3);
  add(e2d, 825, 404, 578, 2, 4);
  add(e2d, 825, 413, 578, 4, 0);
  add(e2d, 825, 412, 578, 4, 1);
  add(e2d, 825, 411, 578, 4, 2);
  add(e2d, 825, 410, 578, 4, 3);
  add(e2d, 825, 409, 578, 4, 4);
  add(e2d, 825, 315, 578, 6, 0);
  add(e2d, 825, 314, 578, 6, 1);
  add(e2d, 825, 313, 578, 6, 2);
  add(e2d, 825, 312, 578, 6, 3);
  add(e2d, 825, 311, 578, 6, 4);
  add(e2d, 825, 320, 578, 1, 0);
  add(e2d, 825, 319, 578, 1, 1);
  add(e2d, 825, 318, 578, 1, 2);
  add(e2d, 825, 317, 578, 1, 3);
  add(e2d, 825, 316, 578, 1, 4);
  add(e2d, 825, 328, 578, 3, 0);
  add(e2d, 825, 329, 578, 3, 1);
  add(e2d, 825, 330, 578, 3, 2);
  add(e2d, 825, 331, 578, 3, 3);
  add(e2d, 825, 332, 578, 3, 4);
  add(e2d, 825, 216, 578, 5, 0);
  add(e2d, 825, 215, 578, 5, 1);
  add(e2d, 825, 214, 578, 5, 2);
  add(e2d, 825, 213, 578, 5, 3);
  add(e2d, 825, 212, 578, 5, 4);
  add(e2d, 825, 208, 578, 7, 0);
  add(e2d, 825, 207, 578, 7, 1);
  add(e2d, 825, 1330, 579, 0, 0);
  add(e2d, 825, 1331, 579, 0, 1);
  add(e2d, 825, 1332, 579, 0, 2);
  add(e2d, 825, 1333, 579, 0, 3);
  add(e2d, 825, 1334, 579, 0, 4);
  add(e2d, 825, 1325, 579, 2, 0);
  add(e2d, 825, 1326, 579, 2, 1);
  add(e2d, 825, 1327, 579, 2, 2);
  add(e2d, 825, 1328, 579, 2, 3);
  add(e2d, 825, 1329, 579, 2, 4);
  add(e2d, 825, 1349, 579, 4, 0);
  add(e2d, 825, 1350, 579, 4, 1);
  add(e2d, 825, 1351, 579, 4, 2);
  add(e2d, 825, 1345, 579, 6, 0);
  add(e2d, 825, 1346, 579, 6, 1);
  add(e2d, 825, 1347, 579, 6, 2);
  add(e2d, 825, 1348, 579, 6, 3);
  add(e2d, 825, 1360, 579, 1, 0);
  add(e2d, 825, 1359, 579, 1, 1);
  add(e2d, 825, 1358, 579, 1, 2);
  add(e2d, 825, 1357, 579, 1, 3);
  add(e2d, 825, 1233, 579, 3, 0);
  add(e2d, 825, 1234, 579, 3, 1);
  add(e2d, 825, 1235, 579, 3, 2);
  add(e2d, 825, 1229, 579, 5, 0);
  add(e2d, 825, 1230, 579, 5, 1);
  add(e2d, 825, 1225, 579, 7, 0);
  add(e2d, 825, 1226, 579, 7, 1);
  add(e2d, 824, 5, 580, 0, 0);
  add(e2d, 824, 4, 580, 0, 1);
  add(e2d, 824, 3, 580, 0, 2);
  add(e2d, 824, 2, 580, 0, 3);
  add(e2d, 824, 1, 580, 0, 4);
  add(e2d, 824, 10, 580, 2, 0);
  add(e2d, 824, 9, 580, 2, 1);
  add(e2d, 824, 8, 580, 2, 2);
  add(e2d, 824, 7, 580, 2, 3);
  add(e2d, 824, 6, 580, 2, 4);
  add(e2d, 824, 22, 580, 4, 0);
  add(e2d, 824, 21, 580, 4, 1);
  add(e2d, 824, 20, 580, 4, 2);
  add(e2d, 824, 19, 580, 4, 3);
  add(e2d, 824, 18, 580, 4, 4);
  add(e2d, 824, 27, 580, 6, 0);
  add(e2d, 824, 26, 580, 6, 1);
  add(e2d, 824, 25, 580, 6, 2);
  add(e2d, 824, 24, 580, 6, 3);
  add(e2d, 824, 23, 580, 6, 4);
  add(e2d, 824, 120, 580, 1, 0);
  add(e2d, 824, 119, 580, 1, 1);
  add(e2d, 824, 118, 580, 1, 2);
  add(e2d, 824, 117, 580, 1, 3);
  add(e2d, 824, 116, 580, 1, 4);
  add(e2d, 824, 112, 580, 3, 0);
  add(e2d, 824, 111, 580, 3, 1);
  add(e2d, 824, 110, 580, 3, 2);
  add(e2d, 824, 109, 580, 3, 3);
  add(e2d, 824, 108, 580, 3, 4);
  add(e2d, 824, 104, 580, 5, 0);
  add(e2d, 824, 103, 580, 5, 1);
  add(e2d, 824, 1039, 581, 0, 0);
  add(e2d, 824, 1040, 581, 0, 1);
  add(e2d, 824, 1041, 581, 0, 2);
  add(e2d, 824, 1035, 581, 2, 0);
  add(e2d, 824, 1036, 581, 2, 1);
  add(e2d, 824, 1037, 581, 2, 2);
  add(e2d, 824, 1038, 581, 2, 3);
  add(e2d, 824, 1056, 581, 4, 0);
  add(e2d, 824, 1057, 581, 4, 1);
  add(e2d, 824, 1058, 581, 4, 2);
  add(e2d, 824, 1052, 581, 6, 0);
  add(e2d, 824, 1053, 581, 6, 1);
  add(e2d, 824, 1054, 581, 6, 2);
  add(e2d, 824, 1055, 581, 6, 3);
  add(e2d, 824, 1137, 581, 1, 0);
  add(e2d, 824, 1138, 581, 1, 1);
  add(e2d, 824, 1139, 581, 1, 2);
  add(e2d, 824, 1129, 581, 3, 0);
  add(e2d, 824, 1130, 581, 3, 1);
  add(e2d, 824, 1131, 581, 3, 2);
  add(e2d, 824, 1125, 581, 5, 0);
  add(e2d, 824, 1126, 581, 5, 1);
  add(e2d, 824, 313, 592, 0, 0);
  add(e2d, 824, 314, 592, 0, 1);
  add(e2d, 824, 315, 592, 0, 2);
  add(e2d, 824, 316, 592, 0, 3);
  add(e2d, 824, 317, 592, 0, 4);
  add(e2d, 824, 308, 592, 2, 0);
  add(e2d, 824, 309, 592, 2, 1);
  add(e2d, 824, 310, 592, 2, 2);
  add(e2d, 824, 311, 592, 2, 3);
  add(e2d, 824, 312, 592, 2, 4);
  add(e2d, 824, 330, 592, 4, 0);
  add(e2d, 824, 331, 592, 4, 1);
  add(e2d, 824, 332, 592, 4, 2);
  add(e2d, 824, 333, 592, 4, 3);
  add(e2d, 824, 334, 592, 4, 4);
  add(e2d, 824, 325, 592, 6, 0);
  add(e2d, 824, 326, 592, 6, 1);
  add(e2d, 824, 327, 592, 6, 2);
  add(e2d, 824, 328, 592, 6, 3);
  add(e2d, 824, 329, 592, 6, 4);
  add(e2d, 824, 215, 592, 1, 0);
  add(e2d, 824, 216, 592, 1, 1);
  add(e2d, 824, 217, 592, 1, 2);
  add(e2d, 824, 218, 592, 1, 3);
  add(e2d, 824, 219, 592, 1, 4);
  add(e2d, 824, 206, 592, 3, 0);
  add(e2d, 824, 207, 592, 3, 1);
  add(e2d, 824, 208, 592, 3, 2);
  add(e2d, 824, 209, 592, 3, 3);
  add(e2d, 824, 210, 592, 3, 4);
  add(e2d, 824, 201, 592, 5, 0);
  add(e2d, 824, 202, 592, 5, 1);
  add(e2d, 824, 203, 592, 5, 2);
  add(e2d, 824, 1327, 593, 0, 0);
  add(e2d, 824, 1326, 593, 0, 1);
  add(e2d, 824, 1325, 593, 0, 2);
  add(e2d, 824, 1331, 593, 2, 0);
  add(e2d, 824, 1330, 593, 2, 1);
  add(e2d, 824, 1329, 593, 2, 2);
  add(e2d, 824, 1328, 593, 2, 3);
  add(e2d, 824, 1344, 593, 4, 0);
  add(e2d, 824, 1343, 593, 4, 1);
  add(e2d, 824, 1342, 593, 4, 2);
  add(e2d, 824, 1348, 593, 6, 0);
  add(e2d, 824, 1347, 593, 6, 1);
  add(e2d, 824, 1346, 593, 6, 2);
  add(e2d, 824, 1345, 593, 6, 3);
  add(e2d, 824, 1247, 593, 1, 0);
  add(e2d, 824, 1246, 593, 1, 1);
  add(e2d, 824, 1245, 593, 1, 2);
  add(e2d, 824, 1244, 593, 1, 3);
  add(e2d, 824, 1238, 593, 3, 0);
  add(e2d, 824, 1237, 593, 3, 1);
  add(e2d, 824, 1236, 593, 3, 2);
  add(e2d, 824, 1235, 593, 3, 3);
  add(e2d, 824, 1229, 593, 5, 0);
  add(e2d, 824, 1228, 593, 5, 1);
  add(e2d, 823, 308, 594, 0, 0);
  add(e2d, 823, 307, 594, 0, 1);
  add(e2d, 823, 306, 594, 0, 2);
  add(e2d, 823, 305, 594, 0, 3);
  add(e2d, 823, 304, 594, 0, 4);
  add(e2d, 823, 316, 594, 2, 0);
  add(e2d, 823, 315, 594, 2, 1);
  add(e2d, 823, 314, 594, 2, 2);
  add(e2d, 823, 313, 594, 2, 3);
  add(e2d, 823, 312, 594, 2, 4);
  add(e2d, 823, 211, 594, 4, 0);
  add(e2d, 823, 212, 594, 4, 1);
  add(e2d, 823, 213, 594, 4, 2);
  add(e2d, 823, 214, 594, 4, 3);
  add(e2d, 823, 215, 594, 4, 4);
  add(e2d, 823, 206, 594, 1, 0);
  add(e2d, 823, 207, 594, 1, 1);
  add(e2d, 823, 208, 594, 1, 2);
  add(e2d, 823, 201, 594, 3, 0);
  add(e2d, 823, 202, 594, 3, 1);
  add(e2d, 823, 203, 594, 3, 2);
  add(e2d, 823, 1325, 595, 0, 0);
  add(e2d, 823, 1326, 595, 0, 1);
  add(e2d, 823, 1327, 595, 0, 2);
  add(e2d, 823, 1333, 595, 2, 0);
  add(e2d, 823, 1334, 595, 2, 1);
  add(e2d, 823, 1335, 595, 2, 2);
  add(e2d, 823, 1243, 595, 4, 0);
  add(e2d, 823, 1242, 595, 4, 1);
  add(e2d, 823, 1241, 595, 4, 2);
  add(e2d, 823, 1240, 595, 4, 3);
  add(e2d, 823, 1234, 595, 1, 0);
  add(e2d, 823, 1233, 595, 1, 1);
  add(e2d, 823, 1229, 595, 3, 0);
  add(e2d, 823, 1228, 595, 3, 1);
  add(e2d, 823, 1, 596, 0, 0);
  add(e2d, 823, 2, 596, 0, 1);
  add(e2d, 823, 3, 596, 0, 2);
  add(e2d, 823, 4, 596, 0, 3);
  add(e2d, 823, 5, 596, 0, 4);
  add(e2d, 823, 10, 596, 2, 0);
  add(e2d, 823, 11, 596, 2, 1);
  add(e2d, 823, 12, 596, 2, 2);
  add(e2d, 823, 13, 596, 2, 3);
  add(e2d, 823, 14, 596, 2, 4);
  add(e2d, 823, 116, 596, 4, 0);
  add(e2d, 823, 115, 596, 4, 1);
  add(e2d, 823, 114, 596, 4, 2);
  add(e2d, 823, 113, 596, 4, 3);
  add(e2d, 823, 112, 596, 4, 4);
  add(e2d, 823, 108, 596, 1, 0);
  add(e2d, 823, 107, 596, 1, 1);
  add(e2d, 823, 104, 596, 3, 0);
  add(e2d, 823, 103, 596, 3, 1);
  add(e2d, 823, 1033, 597, 0, 0);
  add(e2d, 823, 1032, 597, 0, 1);
  add(e2d, 823, 1031, 597, 0, 2);
  add(e2d, 823, 1030, 597, 0, 3);
  add(e2d, 823, 1042, 597, 2, 0);
  add(e2d, 823, 1041, 597, 2, 1);
  add(e2d, 823, 1040, 597, 2, 2);
  add(e2d, 823, 1039, 597, 2, 3);
  add(e2d, 823, 1133, 597, 4, 0);
  add(e2d, 823, 1134, 597, 4, 1);
  add(e2d, 823, 1135, 597, 4, 2);
  add(e2d, 823, 1129, 597, 1, 0);
  add(e2d, 823, 1130, 597, 1, 1);
  add(e2d, 823, 1125, 597, 3, 0);
  add(e2d, 823, 1126, 597, 3, 1);
  add(e2d, 822, 1, 496, 0, 0);
  add(e2d, 822, 2, 496, 0, 1);
  add(e2d, 822, 3, 496, 0, 2);
  add(e2d, 822, 4, 496, 0, 3);
  add(e2d, 822, 5, 496, 0, 4);
  add(e2d, 822, 116, 496, 2, 0);
  add(e2d, 822, 115, 496, 2, 1);
  add(e2d, 822, 114, 496, 2, 2);
  add(e2d, 822, 113, 496, 2, 3);
  add(e2d, 822, 112, 496, 2, 4);
  add(e2d, 822, 108, 496, 4, 0);
  add(e2d, 822, 107, 496, 4, 1);
  add(e2d, 822, 104, 496, 6, 0);
  add(e2d, 822, 103, 496, 6, 1);
  add(e2d, 822, 1033, 496, 1, 0);
  add(e2d, 822, 1032, 496, 1, 1);
  add(e2d, 822, 1031, 496, 1, 2);
  add(e2d, 822, 1030, 496, 1, 3);
  add(e2d, 822, 1133, 496, 3, 0);
  add(e2d, 822, 1134, 496, 3, 1);
  add(e2d, 822, 1135, 496, 3, 2);
  add(e2d, 822, 1129, 496, 5, 0);
  add(e2d, 822, 1130, 496, 5, 1);
  add(e2d, 822, 1125, 496, 7, 0);
  add(e2d, 822, 1126, 496, 7, 1);
  add(e2d, 822, 308, 497, 0, 0);
  add(e2d, 822, 307, 497, 0, 1);
  add(e2d, 822, 306, 497, 0, 2);
  add(e2d, 822, 305, 497, 0, 3);
  add(e2d, 822, 304, 497, 0, 4);
  add(e2d, 822, 211, 497, 2, 0);
  add(e2d, 822, 212, 497, 2, 1);
  add(e2d, 822, 213, 497, 2, 2);
  add(e2d, 822, 214, 497, 2, 3);
  add(e2d, 822, 215, 497, 2, 4);
  add(e2d, 822, 206, 497, 4, 0);
  add(e2d, 822, 207, 497, 4, 1);
  add(e2d, 822, 208, 497, 4, 2);
  add(e2d, 822, 201, 497, 6, 0);
  add(e2d, 822, 202, 497, 6, 1);
  add(e2d, 822, 203, 497, 6, 2);
  add(e2d, 822, 1325, 497, 1, 0);
  add(e2d, 822, 1326, 497, 1, 1);
  add(e2d, 822, 1327, 497, 1, 2);
  add(e2d, 822, 1243, 497, 3, 0);
  add(e2d, 822, 1242, 497, 3, 1);
  add(e2d, 822, 1241, 497, 3, 2);
  add(e2d, 822, 1240, 497, 3, 3);
  add(e2d, 822, 1234, 497, 5, 0);
  add(e2d, 822, 1233, 497, 5, 1);
  add(e2d, 822, 1229, 497, 7, 0);
  add(e2d, 822, 1228, 497, 7, 1);
  add(e2d, 821, 111, 498, 0, 0);
  add(e2d, 821, 112, 498, 0, 1);
  add(e2d, 821, 113, 498, 0, 2);
  add(e2d, 821, 106, 498, 2, 0);
  add(e2d, 821, 107, 498, 2, 1);
  add(e2d, 821, 108, 498, 2, 2);
  add(e2d, 821, 101, 498, 4, 0);
  add(e2d, 821, 102, 498, 4, 1);
  add(e2d, 821, 103, 498, 4, 2);
  add(e2d, 821, 1139, 498, 1, 0);
  add(e2d, 821, 1138, 498, 1, 1);
  add(e2d, 821, 1134, 498, 3, 0);
  add(e2d, 821, 1133, 498, 3, 1);
  add(e2d, 821, 1129, 498, 5, 0);
  add(e2d, 821, 1128, 498, 5, 1);
  add(e2d, 821, 12, 499, 0, 0);
  add(e2d, 821, 11, 499, 0, 1);
  add(e2d, 821, 8, 499, 2, 0);
  add(e2d, 821, 7, 499, 2, 1);
  add(e2d, 821, 4, 499, 4, 0);
  add(e2d, 821, 3, 499, 4, 1);
  add(e2d, 821, 1033, 499, 1, 0);
  add(e2d, 821, 1034, 499, 1, 1);
  add(e2d, 821, 1029, 499, 3, 0);
  add(e2d, 821, 1030, 499, 3, 1);
  add(e2d, 821, 1025, 499, 5, 0);
  add(e2d, 821, 1026, 499, 5, 1);
  add(e2d, 820, 8, 500, 0, 0);
  add(e2d, 820, 7, 500, 0, 1);
  add(e2d, 820, 4, 500, 2, 0);
  add(e2d, 820, 3, 500, 2, 1);
  add(e2d, 820, 1029, 500, 4, 0);
  add(e2d, 820, 1030, 500, 4, 1);
  add(e2d, 820, 1025, 500, 6, 0);
  add(e2d, 820, 1026, 500, 6, 1);
  add(e2d, 820, 106, 500, 1, 0);
  add(e2d, 820, 107, 500, 1, 1);
  add(e2d, 820, 108, 500, 1, 2);
  add(e2d, 820, 101, 500, 3, 0);
  add(e2d, 820, 102, 500, 3, 1);
  add(e2d, 820, 103, 500, 3, 2);
  add(e2d, 820, 1134, 500, 5, 0);
  add(e2d, 820, 1133, 500, 5, 1);
  add(e2d, 820, 1129, 500, 7, 0);
  add(e2d, 820, 1128, 500, 7, 1);
}
void fillSolar2FeeLinkCH8R(std::map<uint16_t, uint32_t>& s2f)
{
  add_cru(s2f, 40, 0, 824);
  add_cru(s2f, 40, 1, 825);
  add_cru(s2f, 40, 2, 826);
  add_cru(s2f, 40, 3, 827);
  add_cru(s2f, 40, 4, 828);
  add_cru(s2f, 41, 0, 808);
  add_cru(s2f, 41, 1, 809);
  add_cru(s2f, 41, 2, 810);
  add_cru(s2f, 41, 3, 811);
  add_cru(s2f, 41, 4, 812);
  add_cru(s2f, 41, 5, 813);
  add_cru(s2f, 41, 6, 832);
  add_cru(s2f, 41, 7, 833);
  add_cru(s2f, 41, 8, 834);
  add_cru(s2f, 41, 9, 835);
  add_cru(s2f, 41, 10, 836);
  add_cru(s2f, 41, 11, 837);
  add_cru(s2f, 48, 0, 600);
  add_cru(s2f, 48, 1, 601);
  add_cru(s2f, 48, 2, 602);
  add_cru(s2f, 48, 3, 603);
  add_cru(s2f, 48, 6, 576);
  add_cru(s2f, 48, 7, 577);
  add_cru(s2f, 48, 8, 578);
  add_cru(s2f, 48, 9, 579);
  add_cru(s2f, 48, 10, 580);
  add_cru(s2f, 48, 11, 581);
  add_cru(s2f, 49, 0, 592);
  add_cru(s2f, 49, 1, 593);
  add_cru(s2f, 49, 2, 594);
  add_cru(s2f, 49, 3, 595);
  add_cru(s2f, 49, 4, 596);
  add_cru(s2f, 49, 5, 597);
  add_cru(s2f, 49, 6, 496);
  add_cru(s2f, 49, 7, 497);
  add_cru(s2f, 49, 8, 498);
  add_cru(s2f, 49, 9, 499);
  add_cru(s2f, 49, 10, 500);
}