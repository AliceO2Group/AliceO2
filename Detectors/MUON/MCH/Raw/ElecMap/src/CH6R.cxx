// Copyright 2019-2020 CERN and copyright holders of ALICE O2.
// See https://alice-o2.web.cern.ch/copyright for details of the copyright holders.
// All rights not expressly granted are reserved.
//
// This software is distributed under the terms of the GNU General Public
// License v3 (GPL Version 3), copied verbatim in the file "COPYING".
//
// In applying this license CERN does not waive the privileges and immunities
// granted to it by virtue of its status as an Intergovernmental Organization
// or submit itself to any jurisdiction.

///
/// GENERATED CODE ! DO NOT EDIT !
///

#include "CH.cxx"
void fillElec2DetCH6R(std::map<uint32_t, uint32_t>& e2d)
{
  add(e2d, 604, 16, 448, 0, 0);
  add(e2d, 604, 15, 448, 0, 1);
  add(e2d, 604, 14, 448, 0, 2);
  add(e2d, 604, 13, 448, 0, 3);
  add(e2d, 604, 12, 448, 0, 4);
  add(e2d, 604, 8, 448, 2, 0);
  add(e2d, 604, 7, 448, 2, 1);
  add(e2d, 604, 6, 448, 2, 2);
  add(e2d, 604, 5, 448, 2, 3);
  add(e2d, 604, 4, 448, 2, 4);
  add(e2d, 604, 1033, 448, 4, 0);
  add(e2d, 604, 1034, 448, 4, 1);
  add(e2d, 604, 1035, 448, 4, 2);
  add(e2d, 604, 1025, 448, 6, 0);
  add(e2d, 604, 1026, 448, 6, 1);
  add(e2d, 604, 1027, 448, 6, 2);
  add(e2d, 604, 110, 448, 1, 0);
  add(e2d, 604, 111, 448, 1, 1);
  add(e2d, 604, 112, 448, 1, 2);
  add(e2d, 604, 113, 448, 1, 3);
  add(e2d, 604, 114, 448, 1, 4);
  add(e2d, 604, 101, 448, 3, 0);
  add(e2d, 604, 102, 448, 3, 1);
  add(e2d, 604, 103, 448, 3, 2);
  add(e2d, 604, 104, 448, 3, 3);
  add(e2d, 604, 105, 448, 3, 4);
  add(e2d, 604, 1142, 448, 5, 0);
  add(e2d, 604, 1141, 448, 5, 1);
  add(e2d, 604, 1140, 448, 5, 2);
  add(e2d, 604, 1139, 448, 5, 3);
  add(e2d, 604, 1133, 448, 7, 0);
  add(e2d, 604, 1132, 448, 7, 1);
  add(e2d, 604, 1131, 448, 7, 2);
  add(e2d, 604, 1130, 448, 7, 3);
  add(e2d, 603, 119, 449, 1, 0);
  add(e2d, 603, 120, 449, 1, 1);
  add(e2d, 603, 121, 449, 1, 2);
  add(e2d, 603, 122, 449, 1, 3);
  add(e2d, 603, 123, 449, 1, 4);
  add(e2d, 603, 110, 449, 3, 0);
  add(e2d, 603, 111, 449, 3, 1);
  add(e2d, 603, 112, 449, 3, 2);
  add(e2d, 603, 113, 449, 3, 3);
  add(e2d, 603, 114, 449, 3, 4);
  add(e2d, 603, 101, 449, 5, 0);
  add(e2d, 603, 102, 449, 5, 1);
  add(e2d, 603, 103, 449, 5, 2);
  add(e2d, 603, 104, 449, 5, 3);
  add(e2d, 603, 105, 449, 5, 4);
  add(e2d, 603, 1151, 449, 0, 0);
  add(e2d, 603, 1150, 449, 0, 1);
  add(e2d, 603, 1149, 449, 0, 2);
  add(e2d, 603, 1148, 449, 0, 3);
  add(e2d, 603, 1142, 449, 2, 0);
  add(e2d, 603, 1141, 449, 2, 1);
  add(e2d, 603, 1140, 449, 2, 2);
  add(e2d, 603, 1139, 449, 2, 3);
  add(e2d, 603, 1133, 449, 4, 0);
  add(e2d, 603, 1132, 449, 4, 1);
  add(e2d, 603, 1131, 449, 4, 2);
  add(e2d, 603, 1130, 449, 4, 3);
  add(e2d, 603, 24, 450, 1, 0);
  add(e2d, 603, 23, 450, 1, 1);
  add(e2d, 603, 22, 450, 1, 2);
  add(e2d, 603, 21, 450, 1, 3);
  add(e2d, 603, 20, 450, 1, 4);
  add(e2d, 603, 16, 450, 3, 0);
  add(e2d, 603, 15, 450, 3, 1);
  add(e2d, 603, 14, 450, 3, 2);
  add(e2d, 603, 13, 450, 3, 3);
  add(e2d, 603, 12, 450, 3, 4);
  add(e2d, 603, 8, 450, 5, 0);
  add(e2d, 603, 7, 450, 5, 1);
  add(e2d, 603, 6, 450, 5, 2);
  add(e2d, 603, 5, 450, 5, 3);
  add(e2d, 603, 4, 450, 5, 4);
  add(e2d, 603, 1041, 450, 0, 0);
  add(e2d, 603, 1042, 450, 0, 1);
  add(e2d, 603, 1043, 450, 0, 2);
  add(e2d, 603, 1033, 450, 2, 0);
  add(e2d, 603, 1034, 450, 2, 1);
  add(e2d, 603, 1035, 450, 2, 2);
  add(e2d, 603, 1025, 450, 4, 0);
  add(e2d, 603, 1026, 450, 4, 1);
  add(e2d, 603, 1027, 450, 4, 2);
  add(e2d, 602, 1039, 360, 0, 0);
  add(e2d, 602, 1040, 360, 0, 1);
  add(e2d, 602, 1041, 360, 0, 2);
  add(e2d, 602, 1035, 360, 2, 0);
  add(e2d, 602, 1036, 360, 2, 1);
  add(e2d, 602, 1037, 360, 2, 2);
  add(e2d, 602, 1038, 360, 2, 3);
  add(e2d, 602, 1141, 360, 4, 0);
  add(e2d, 602, 1142, 360, 4, 1);
  add(e2d, 602, 1143, 360, 4, 2);
  add(e2d, 602, 1133, 360, 1, 0);
  add(e2d, 602, 1134, 360, 1, 1);
  add(e2d, 602, 1135, 360, 1, 2);
  add(e2d, 602, 1125, 360, 3, 0);
  add(e2d, 602, 1126, 360, 3, 1);
  add(e2d, 602, 1127, 360, 3, 2);
  add(e2d, 602, 5, 361, 0, 0);
  add(e2d, 602, 4, 361, 0, 1);
  add(e2d, 602, 3, 361, 0, 2);
  add(e2d, 602, 2, 361, 0, 3);
  add(e2d, 602, 1, 361, 0, 4);
  add(e2d, 602, 10, 361, 2, 0);
  add(e2d, 602, 9, 361, 2, 1);
  add(e2d, 602, 8, 361, 2, 2);
  add(e2d, 602, 7, 361, 2, 3);
  add(e2d, 602, 6, 361, 2, 4);
  add(e2d, 602, 124, 361, 4, 0);
  add(e2d, 602, 123, 361, 4, 1);
  add(e2d, 602, 122, 361, 4, 2);
  add(e2d, 602, 121, 361, 4, 3);
  add(e2d, 602, 120, 361, 4, 4);
  add(e2d, 602, 116, 361, 1, 0);
  add(e2d, 602, 115, 361, 1, 1);
  add(e2d, 602, 114, 361, 1, 2);
  add(e2d, 602, 113, 361, 1, 3);
  add(e2d, 602, 112, 361, 1, 4);
  add(e2d, 602, 108, 361, 3, 0);
  add(e2d, 602, 107, 361, 3, 1);
  add(e2d, 602, 106, 361, 3, 2);
  add(e2d, 602, 105, 361, 3, 3);
  add(e2d, 602, 104, 361, 3, 4);
  add(e2d, 602, 1327, 362, 0, 0);
  add(e2d, 602, 1326, 362, 0, 1);
  add(e2d, 602, 1325, 362, 0, 2);
  add(e2d, 602, 1331, 362, 2, 0);
  add(e2d, 602, 1330, 362, 2, 1);
  add(e2d, 602, 1329, 362, 2, 2);
  add(e2d, 602, 1328, 362, 2, 3);
  add(e2d, 602, 1251, 362, 4, 0);
  add(e2d, 602, 1250, 362, 4, 1);
  add(e2d, 602, 1249, 362, 4, 2);
  add(e2d, 602, 1248, 362, 4, 3);
  add(e2d, 602, 1242, 362, 1, 0);
  add(e2d, 602, 1241, 362, 1, 1);
  add(e2d, 602, 1240, 362, 1, 2);
  add(e2d, 602, 1239, 362, 1, 3);
  add(e2d, 602, 1233, 362, 3, 0);
  add(e2d, 602, 1232, 362, 3, 1);
  add(e2d, 602, 1231, 362, 3, 2);
  add(e2d, 602, 1230, 362, 3, 3);
  add(e2d, 602, 313, 363, 0, 0);
  add(e2d, 602, 314, 363, 0, 1);
  add(e2d, 602, 315, 363, 0, 2);
  add(e2d, 602, 316, 363, 0, 3);
  add(e2d, 602, 317, 363, 0, 4);
  add(e2d, 602, 308, 363, 2, 0);
  add(e2d, 602, 309, 363, 2, 1);
  add(e2d, 602, 310, 363, 2, 2);
  add(e2d, 602, 311, 363, 2, 3);
  add(e2d, 602, 312, 363, 2, 4);
  add(e2d, 602, 219, 363, 4, 0);
  add(e2d, 602, 220, 363, 4, 1);
  add(e2d, 602, 221, 363, 4, 2);
  add(e2d, 602, 222, 363, 4, 3);
  add(e2d, 602, 223, 363, 4, 4);
  add(e2d, 602, 210, 363, 1, 0);
  add(e2d, 602, 211, 363, 1, 1);
  add(e2d, 602, 212, 363, 1, 2);
  add(e2d, 602, 213, 363, 1, 3);
  add(e2d, 602, 214, 363, 1, 4);
  add(e2d, 602, 201, 363, 3, 0);
  add(e2d, 602, 202, 363, 3, 1);
  add(e2d, 602, 203, 363, 3, 2);
  add(e2d, 602, 204, 363, 3, 3);
  add(e2d, 602, 205, 363, 3, 4);
  add(e2d, 601, 405, 364, 0, 0);
  add(e2d, 601, 404, 364, 0, 1);
  add(e2d, 601, 403, 364, 0, 2);
  add(e2d, 601, 402, 364, 0, 3);
  add(e2d, 601, 401, 364, 0, 4);
  add(e2d, 601, 410, 364, 2, 0);
  add(e2d, 601, 409, 364, 2, 1);
  add(e2d, 601, 408, 364, 2, 2);
  add(e2d, 601, 407, 364, 2, 3);
  add(e2d, 601, 406, 364, 2, 4);
  add(e2d, 601, 413, 364, 4, 0);
  add(e2d, 601, 412, 364, 4, 1);
  add(e2d, 601, 411, 364, 4, 2);
  add(e2d, 601, 228, 364, 6, 0);
  add(e2d, 601, 227, 364, 6, 1);
  add(e2d, 601, 226, 364, 6, 2);
  add(e2d, 601, 225, 364, 6, 3);
  add(e2d, 601, 224, 364, 6, 4);
  add(e2d, 601, 233, 364, 1, 0);
  add(e2d, 601, 232, 364, 1, 1);
  add(e2d, 601, 231, 364, 1, 2);
  add(e2d, 601, 230, 364, 1, 3);
  add(e2d, 601, 229, 364, 1, 4);
  add(e2d, 601, 216, 364, 3, 0);
  add(e2d, 601, 215, 364, 3, 1);
  add(e2d, 601, 214, 364, 3, 2);
  add(e2d, 601, 213, 364, 3, 3);
  add(e2d, 601, 212, 364, 3, 4);
  add(e2d, 601, 208, 364, 5, 0);
  add(e2d, 601, 207, 364, 5, 1);
  add(e2d, 601, 206, 364, 5, 2);
  add(e2d, 601, 205, 364, 5, 3);
  add(e2d, 601, 204, 364, 5, 4);
  add(e2d, 601, 1329, 365, 0, 0);
  add(e2d, 601, 1330, 365, 0, 1);
  add(e2d, 601, 1331, 365, 0, 2);
  add(e2d, 601, 1332, 365, 0, 3);
  add(e2d, 601, 1333, 365, 0, 4);
  add(e2d, 601, 1325, 365, 2, 0);
  add(e2d, 601, 1326, 365, 2, 1);
  add(e2d, 601, 1327, 365, 2, 2);
  add(e2d, 601, 1328, 365, 2, 3);
  add(e2d, 601, 1245, 365, 4, 0);
  add(e2d, 601, 1246, 365, 4, 1);
  add(e2d, 601, 1247, 365, 4, 2);
  add(e2d, 601, 1241, 365, 1, 0);
  add(e2d, 601, 1242, 365, 1, 1);
  add(e2d, 601, 1243, 365, 1, 2);
  add(e2d, 601, 1244, 365, 1, 3);
  add(e2d, 601, 1233, 365, 3, 0);
  add(e2d, 601, 1234, 365, 3, 1);
  add(e2d, 601, 1235, 365, 3, 2);
  add(e2d, 601, 1225, 365, 5, 0);
  add(e2d, 601, 1226, 365, 5, 1);
  add(e2d, 601, 1227, 365, 5, 2);
  add(e2d, 601, 4, 216, 0, 0);
  add(e2d, 601, 5, 216, 0, 1);
  add(e2d, 601, 6, 216, 0, 2);
  add(e2d, 601, 7, 216, 0, 3);
  add(e2d, 601, 124, 216, 2, 0);
  add(e2d, 601, 125, 216, 2, 1);
  add(e2d, 601, 126, 216, 2, 2);
  add(e2d, 601, 127, 216, 2, 3);
  add(e2d, 601, 128, 216, 2, 4);
  add(e2d, 601, 119, 216, 4, 0);
  add(e2d, 601, 120, 216, 4, 1);
  add(e2d, 601, 121, 216, 4, 2);
  add(e2d, 601, 122, 216, 4, 3);
  add(e2d, 601, 123, 216, 4, 4);
  add(e2d, 601, 110, 216, 1, 0);
  add(e2d, 601, 111, 216, 1, 1);
  add(e2d, 601, 112, 216, 1, 2);
  add(e2d, 601, 113, 216, 1, 3);
  add(e2d, 601, 114, 216, 1, 4);
  add(e2d, 601, 101, 216, 3, 0);
  add(e2d, 601, 102, 216, 3, 1);
  add(e2d, 601, 103, 216, 3, 2);
  add(e2d, 601, 104, 216, 3, 3);
  add(e2d, 601, 105, 216, 3, 4);
  add(e2d, 601, 1027, 217, 0, 0);
  add(e2d, 601, 1026, 217, 0, 1);
  add(e2d, 601, 1025, 217, 0, 2);
  add(e2d, 601, 1155, 217, 2, 0);
  add(e2d, 601, 1154, 217, 2, 1);
  add(e2d, 601, 1153, 217, 2, 2);
  add(e2d, 601, 1159, 217, 4, 0);
  add(e2d, 601, 1158, 217, 4, 1);
  add(e2d, 601, 1157, 217, 4, 2);
  add(e2d, 601, 1156, 217, 4, 3);
  add(e2d, 601, 1142, 217, 1, 0);
  add(e2d, 601, 1141, 217, 1, 1);
  add(e2d, 601, 1140, 217, 1, 2);
  add(e2d, 601, 1139, 217, 1, 3);
  add(e2d, 601, 1133, 217, 3, 0);
  add(e2d, 601, 1132, 217, 3, 1);
  add(e2d, 601, 1131, 217, 3, 2);
  add(e2d, 601, 1130, 217, 3, 3);
  add(e2d, 600, 3, 218, 0, 0);
  add(e2d, 600, 2, 218, 0, 1);
  add(e2d, 600, 1, 218, 0, 2);
  add(e2d, 600, 10, 218, 2, 0);
  add(e2d, 600, 9, 218, 2, 1);
  add(e2d, 600, 8, 218, 2, 2);
  add(e2d, 600, 7, 218, 2, 3);
  add(e2d, 600, 6, 218, 2, 4);
  add(e2d, 600, 15, 218, 4, 0);
  add(e2d, 600, 14, 218, 4, 1);
  add(e2d, 600, 13, 218, 4, 2);
  add(e2d, 600, 12, 218, 4, 3);
  add(e2d, 600, 11, 218, 4, 4);
  add(e2d, 600, 116, 218, 1, 0);
  add(e2d, 600, 115, 218, 1, 1);
  add(e2d, 600, 114, 218, 1, 2);
  add(e2d, 600, 113, 218, 1, 3);
  add(e2d, 600, 112, 218, 1, 4);
  add(e2d, 600, 108, 218, 3, 0);
  add(e2d, 600, 107, 218, 3, 1);
  add(e2d, 600, 106, 218, 3, 2);
  add(e2d, 600, 105, 218, 3, 3);
  add(e2d, 600, 104, 218, 3, 4);
  add(e2d, 600, 1028, 219, 0, 0);
  add(e2d, 600, 1029, 219, 0, 1);
  add(e2d, 600, 1044, 219, 2, 0);
  add(e2d, 600, 1045, 219, 2, 1);
  add(e2d, 600, 1046, 219, 2, 2);
  add(e2d, 600, 1040, 219, 4, 0);
  add(e2d, 600, 1041, 219, 4, 1);
  add(e2d, 600, 1042, 219, 4, 2);
  add(e2d, 600, 1043, 219, 4, 3);
  add(e2d, 600, 1133, 219, 1, 0);
  add(e2d, 600, 1134, 219, 1, 1);
  add(e2d, 600, 1135, 219, 1, 2);
  add(e2d, 600, 1125, 219, 3, 0);
  add(e2d, 600, 1126, 219, 3, 1);
  add(e2d, 600, 1127, 219, 3, 2);
  add(e2d, 600, 304, 220, 0, 0);
  add(e2d, 600, 305, 220, 0, 1);
  add(e2d, 600, 306, 220, 0, 2);
  add(e2d, 600, 307, 220, 0, 3);
  add(e2d, 600, 320, 220, 2, 0);
  add(e2d, 600, 321, 220, 2, 1);
  add(e2d, 600, 322, 220, 2, 2);
  add(e2d, 600, 323, 220, 2, 3);
  add(e2d, 600, 324, 220, 2, 4);
  add(e2d, 600, 315, 220, 4, 0);
  add(e2d, 600, 316, 220, 4, 1);
  add(e2d, 600, 317, 220, 4, 2);
  add(e2d, 600, 318, 220, 4, 3);
  add(e2d, 600, 319, 220, 4, 4);
  add(e2d, 600, 210, 220, 1, 0);
  add(e2d, 600, 211, 220, 1, 1);
  add(e2d, 600, 212, 220, 1, 2);
  add(e2d, 600, 213, 220, 1, 3);
  add(e2d, 600, 214, 220, 1, 4);
  add(e2d, 600, 201, 220, 3, 0);
  add(e2d, 600, 202, 220, 3, 1);
  add(e2d, 600, 203, 220, 3, 2);
  add(e2d, 600, 204, 220, 3, 3);
  add(e2d, 600, 205, 220, 3, 4);
  add(e2d, 600, 1327, 221, 0, 0);
  add(e2d, 600, 1326, 221, 0, 1);
  add(e2d, 600, 1325, 221, 0, 2);
  add(e2d, 600, 1334, 221, 2, 0);
  add(e2d, 600, 1333, 221, 2, 1);
  add(e2d, 600, 1332, 221, 2, 2);
  add(e2d, 600, 1338, 221, 4, 0);
  add(e2d, 600, 1337, 221, 4, 1);
  add(e2d, 600, 1336, 221, 4, 2);
  add(e2d, 600, 1335, 221, 4, 3);
  add(e2d, 600, 1242, 221, 1, 0);
  add(e2d, 600, 1241, 221, 1, 1);
  add(e2d, 600, 1240, 221, 1, 2);
  add(e2d, 600, 1239, 221, 1, 3);
  add(e2d, 600, 1233, 221, 3, 0);
  add(e2d, 600, 1232, 221, 3, 1);
  add(e2d, 600, 1231, 221, 3, 2);
  add(e2d, 600, 1230, 221, 3, 3);
  add(e2d, 617, 4, 432, 0, 0);
  add(e2d, 617, 5, 432, 0, 1);
  add(e2d, 617, 6, 432, 0, 2);
  add(e2d, 617, 7, 432, 0, 3);
  add(e2d, 617, 124, 432, 2, 0);
  add(e2d, 617, 125, 432, 2, 1);
  add(e2d, 617, 126, 432, 2, 2);
  add(e2d, 617, 127, 432, 2, 3);
  add(e2d, 617, 128, 432, 2, 4);
  add(e2d, 617, 119, 432, 4, 0);
  add(e2d, 617, 120, 432, 4, 1);
  add(e2d, 617, 121, 432, 4, 2);
  add(e2d, 617, 122, 432, 4, 3);
  add(e2d, 617, 123, 432, 4, 4);
  add(e2d, 617, 110, 432, 1, 0);
  add(e2d, 617, 111, 432, 1, 1);
  add(e2d, 617, 112, 432, 1, 2);
  add(e2d, 617, 113, 432, 1, 3);
  add(e2d, 617, 114, 432, 1, 4);
  add(e2d, 617, 101, 432, 3, 0);
  add(e2d, 617, 102, 432, 3, 1);
  add(e2d, 617, 103, 432, 3, 2);
  add(e2d, 617, 104, 432, 3, 3);
  add(e2d, 617, 105, 432, 3, 4);
  add(e2d, 617, 1027, 433, 0, 0);
  add(e2d, 617, 1026, 433, 0, 1);
  add(e2d, 617, 1025, 433, 0, 2);
  add(e2d, 617, 1155, 433, 2, 0);
  add(e2d, 617, 1154, 433, 2, 1);
  add(e2d, 617, 1153, 433, 2, 2);
  add(e2d, 617, 1159, 433, 4, 0);
  add(e2d, 617, 1158, 433, 4, 1);
  add(e2d, 617, 1157, 433, 4, 2);
  add(e2d, 617, 1156, 433, 4, 3);
  add(e2d, 617, 1142, 433, 1, 0);
  add(e2d, 617, 1141, 433, 1, 1);
  add(e2d, 617, 1140, 433, 1, 2);
  add(e2d, 617, 1139, 433, 1, 3);
  add(e2d, 617, 1133, 433, 3, 0);
  add(e2d, 617, 1132, 433, 3, 1);
  add(e2d, 617, 1131, 433, 3, 2);
  add(e2d, 617, 1130, 433, 3, 3);
  add(e2d, 617, 405, 434, 0, 0);
  add(e2d, 617, 404, 434, 0, 1);
  add(e2d, 617, 403, 434, 0, 2);
  add(e2d, 617, 402, 434, 0, 3);
  add(e2d, 617, 401, 434, 0, 4);
  add(e2d, 617, 410, 434, 2, 0);
  add(e2d, 617, 409, 434, 2, 1);
  add(e2d, 617, 408, 434, 2, 2);
  add(e2d, 617, 407, 434, 2, 3);
  add(e2d, 617, 406, 434, 2, 4);
  add(e2d, 617, 413, 434, 4, 0);
  add(e2d, 617, 412, 434, 4, 1);
  add(e2d, 617, 411, 434, 4, 2);
  add(e2d, 617, 228, 434, 6, 0);
  add(e2d, 617, 227, 434, 6, 1);
  add(e2d, 617, 226, 434, 6, 2);
  add(e2d, 617, 225, 434, 6, 3);
  add(e2d, 617, 224, 434, 6, 4);
  add(e2d, 617, 233, 434, 1, 0);
  add(e2d, 617, 232, 434, 1, 1);
  add(e2d, 617, 231, 434, 1, 2);
  add(e2d, 617, 230, 434, 1, 3);
  add(e2d, 617, 229, 434, 1, 4);
  add(e2d, 617, 216, 434, 3, 0);
  add(e2d, 617, 215, 434, 3, 1);
  add(e2d, 617, 214, 434, 3, 2);
  add(e2d, 617, 213, 434, 3, 3);
  add(e2d, 617, 212, 434, 3, 4);
  add(e2d, 617, 208, 434, 5, 0);
  add(e2d, 617, 207, 434, 5, 1);
  add(e2d, 617, 206, 434, 5, 2);
  add(e2d, 617, 205, 434, 5, 3);
  add(e2d, 617, 204, 434, 5, 4);
  add(e2d, 617, 1329, 435, 0, 0);
  add(e2d, 617, 1330, 435, 0, 1);
  add(e2d, 617, 1331, 435, 0, 2);
  add(e2d, 617, 1332, 435, 0, 3);
  add(e2d, 617, 1333, 435, 0, 4);
  add(e2d, 617, 1325, 435, 2, 0);
  add(e2d, 617, 1326, 435, 2, 1);
  add(e2d, 617, 1327, 435, 2, 2);
  add(e2d, 617, 1328, 435, 2, 3);
  add(e2d, 617, 1245, 435, 4, 0);
  add(e2d, 617, 1246, 435, 4, 1);
  add(e2d, 617, 1247, 435, 4, 2);
  add(e2d, 617, 1241, 435, 1, 0);
  add(e2d, 617, 1242, 435, 1, 1);
  add(e2d, 617, 1243, 435, 1, 2);
  add(e2d, 617, 1244, 435, 1, 3);
  add(e2d, 617, 1233, 435, 3, 0);
  add(e2d, 617, 1234, 435, 3, 1);
  add(e2d, 617, 1235, 435, 3, 2);
  add(e2d, 617, 1225, 435, 5, 0);
  add(e2d, 617, 1226, 435, 5, 1);
  add(e2d, 617, 1227, 435, 5, 2);
  add(e2d, 616, 5, 436, 0, 0);
  add(e2d, 616, 4, 436, 0, 1);
  add(e2d, 616, 3, 436, 0, 2);
  add(e2d, 616, 2, 436, 0, 3);
  add(e2d, 616, 1, 436, 0, 4);
  add(e2d, 616, 10, 436, 2, 0);
  add(e2d, 616, 9, 436, 2, 1);
  add(e2d, 616, 8, 436, 2, 2);
  add(e2d, 616, 7, 436, 2, 3);
  add(e2d, 616, 6, 436, 2, 4);
  add(e2d, 616, 124, 436, 4, 0);
  add(e2d, 616, 123, 436, 4, 1);
  add(e2d, 616, 122, 436, 4, 2);
  add(e2d, 616, 121, 436, 4, 3);
  add(e2d, 616, 120, 436, 4, 4);
  add(e2d, 616, 116, 436, 1, 0);
  add(e2d, 616, 115, 436, 1, 1);
  add(e2d, 616, 114, 436, 1, 2);
  add(e2d, 616, 113, 436, 1, 3);
  add(e2d, 616, 112, 436, 1, 4);
  add(e2d, 616, 108, 436, 3, 0);
  add(e2d, 616, 107, 436, 3, 1);
  add(e2d, 616, 106, 436, 3, 2);
  add(e2d, 616, 105, 436, 3, 3);
  add(e2d, 616, 104, 436, 3, 4);
  add(e2d, 616, 1039, 437, 0, 0);
  add(e2d, 616, 1040, 437, 0, 1);
  add(e2d, 616, 1041, 437, 0, 2);
  add(e2d, 616, 1035, 437, 2, 0);
  add(e2d, 616, 1036, 437, 2, 1);
  add(e2d, 616, 1037, 437, 2, 2);
  add(e2d, 616, 1038, 437, 2, 3);
  add(e2d, 616, 1141, 437, 4, 0);
  add(e2d, 616, 1142, 437, 4, 1);
  add(e2d, 616, 1143, 437, 4, 2);
  add(e2d, 616, 1133, 437, 1, 0);
  add(e2d, 616, 1134, 437, 1, 1);
  add(e2d, 616, 1135, 437, 1, 2);
  add(e2d, 616, 1125, 437, 3, 0);
  add(e2d, 616, 1126, 437, 3, 1);
  add(e2d, 616, 1127, 437, 3, 2);
  add(e2d, 616, 313, 408, 0, 0);
  add(e2d, 616, 314, 408, 0, 1);
  add(e2d, 616, 315, 408, 0, 2);
  add(e2d, 616, 316, 408, 0, 3);
  add(e2d, 616, 317, 408, 0, 4);
  add(e2d, 616, 308, 408, 2, 0);
  add(e2d, 616, 309, 408, 2, 1);
  add(e2d, 616, 310, 408, 2, 2);
  add(e2d, 616, 311, 408, 2, 3);
  add(e2d, 616, 312, 408, 2, 4);
  add(e2d, 616, 219, 408, 4, 0);
  add(e2d, 616, 220, 408, 4, 1);
  add(e2d, 616, 221, 408, 4, 2);
  add(e2d, 616, 222, 408, 4, 3);
  add(e2d, 616, 223, 408, 4, 4);
  add(e2d, 616, 210, 408, 1, 0);
  add(e2d, 616, 211, 408, 1, 1);
  add(e2d, 616, 212, 408, 1, 2);
  add(e2d, 616, 213, 408, 1, 3);
  add(e2d, 616, 214, 408, 1, 4);
  add(e2d, 616, 201, 408, 3, 0);
  add(e2d, 616, 202, 408, 3, 1);
  add(e2d, 616, 203, 408, 3, 2);
  add(e2d, 616, 204, 408, 3, 3);
  add(e2d, 616, 205, 408, 3, 4);
  add(e2d, 616, 1327, 409, 0, 0);
  add(e2d, 616, 1326, 409, 0, 1);
  add(e2d, 616, 1325, 409, 0, 2);
  add(e2d, 616, 1331, 409, 2, 0);
  add(e2d, 616, 1330, 409, 2, 1);
  add(e2d, 616, 1329, 409, 2, 2);
  add(e2d, 616, 1328, 409, 2, 3);
  add(e2d, 616, 1251, 409, 4, 0);
  add(e2d, 616, 1250, 409, 4, 1);
  add(e2d, 616, 1249, 409, 4, 2);
  add(e2d, 616, 1248, 409, 4, 3);
  add(e2d, 616, 1242, 409, 1, 0);
  add(e2d, 616, 1241, 409, 1, 1);
  add(e2d, 616, 1240, 409, 1, 2);
  add(e2d, 616, 1239, 409, 1, 3);
  add(e2d, 616, 1233, 409, 3, 0);
  add(e2d, 616, 1232, 409, 3, 1);
  add(e2d, 616, 1231, 409, 3, 2);
  add(e2d, 616, 1230, 409, 3, 3);
  add(e2d, 615, 119, 410, 1, 0);
  add(e2d, 615, 120, 410, 1, 1);
  add(e2d, 615, 121, 410, 1, 2);
  add(e2d, 615, 122, 410, 1, 3);
  add(e2d, 615, 123, 410, 1, 4);
  add(e2d, 615, 110, 410, 3, 0);
  add(e2d, 615, 111, 410, 3, 1);
  add(e2d, 615, 112, 410, 3, 2);
  add(e2d, 615, 113, 410, 3, 3);
  add(e2d, 615, 114, 410, 3, 4);
  add(e2d, 615, 101, 410, 5, 0);
  add(e2d, 615, 102, 410, 5, 1);
  add(e2d, 615, 103, 410, 5, 2);
  add(e2d, 615, 104, 410, 5, 3);
  add(e2d, 615, 105, 410, 5, 4);
  add(e2d, 615, 1151, 410, 0, 0);
  add(e2d, 615, 1150, 410, 0, 1);
  add(e2d, 615, 1149, 410, 0, 2);
  add(e2d, 615, 1148, 410, 0, 3);
  add(e2d, 615, 1142, 410, 2, 0);
  add(e2d, 615, 1141, 410, 2, 1);
  add(e2d, 615, 1140, 410, 2, 2);
  add(e2d, 615, 1139, 410, 2, 3);
  add(e2d, 615, 1133, 410, 4, 0);
  add(e2d, 615, 1132, 410, 4, 1);
  add(e2d, 615, 1131, 410, 4, 2);
  add(e2d, 615, 1130, 410, 4, 3);
  add(e2d, 615, 24, 411, 1, 0);
  add(e2d, 615, 23, 411, 1, 1);
  add(e2d, 615, 22, 411, 1, 2);
  add(e2d, 615, 21, 411, 1, 3);
  add(e2d, 615, 20, 411, 1, 4);
  add(e2d, 615, 16, 411, 3, 0);
  add(e2d, 615, 15, 411, 3, 1);
  add(e2d, 615, 14, 411, 3, 2);
  add(e2d, 615, 13, 411, 3, 3);
  add(e2d, 615, 12, 411, 3, 4);
  add(e2d, 615, 8, 411, 5, 0);
  add(e2d, 615, 7, 411, 5, 1);
  add(e2d, 615, 6, 411, 5, 2);
  add(e2d, 615, 5, 411, 5, 3);
  add(e2d, 615, 4, 411, 5, 4);
  add(e2d, 615, 1041, 411, 0, 0);
  add(e2d, 615, 1042, 411, 0, 1);
  add(e2d, 615, 1043, 411, 0, 2);
  add(e2d, 615, 1033, 411, 2, 0);
  add(e2d, 615, 1034, 411, 2, 1);
  add(e2d, 615, 1035, 411, 2, 2);
  add(e2d, 615, 1025, 411, 4, 0);
  add(e2d, 615, 1026, 411, 4, 1);
  add(e2d, 615, 1027, 411, 4, 2);
  add(e2d, 614, 16, 412, 0, 0);
  add(e2d, 614, 15, 412, 0, 1);
  add(e2d, 614, 14, 412, 0, 2);
  add(e2d, 614, 13, 412, 0, 3);
  add(e2d, 614, 12, 412, 0, 4);
  add(e2d, 614, 8, 412, 2, 0);
  add(e2d, 614, 7, 412, 2, 1);
  add(e2d, 614, 6, 412, 2, 2);
  add(e2d, 614, 5, 412, 2, 3);
  add(e2d, 614, 4, 412, 2, 4);
  add(e2d, 614, 1033, 412, 4, 0);
  add(e2d, 614, 1034, 412, 4, 1);
  add(e2d, 614, 1035, 412, 4, 2);
  add(e2d, 614, 1025, 412, 6, 0);
  add(e2d, 614, 1026, 412, 6, 1);
  add(e2d, 614, 1027, 412, 6, 2);
  add(e2d, 614, 110, 412, 1, 0);
  add(e2d, 614, 111, 412, 1, 1);
  add(e2d, 614, 112, 412, 1, 2);
  add(e2d, 614, 113, 412, 1, 3);
  add(e2d, 614, 114, 412, 1, 4);
  add(e2d, 614, 101, 412, 3, 0);
  add(e2d, 614, 102, 412, 3, 1);
  add(e2d, 614, 103, 412, 3, 2);
  add(e2d, 614, 104, 412, 3, 3);
  add(e2d, 614, 105, 412, 3, 4);
  add(e2d, 614, 1142, 412, 5, 0);
  add(e2d, 614, 1141, 412, 5, 1);
  add(e2d, 614, 1140, 412, 5, 2);
  add(e2d, 614, 1139, 412, 5, 3);
  add(e2d, 614, 1133, 412, 7, 0);
  add(e2d, 614, 1132, 412, 7, 1);
  add(e2d, 614, 1131, 412, 7, 2);
  add(e2d, 614, 1130, 412, 7, 3);
}
void fillSolar2FeeLinkCH6R(std::map<uint16_t, uint32_t>& s2f)
{
  add_cru(s2f, 27, 0, 448);
  add_cru(s2f, 27, 1, 449);
  add_cru(s2f, 27, 2, 450);
  add_cru(s2f, 27, 6, 360);
  add_cru(s2f, 27, 7, 361);
  add_cru(s2f, 27, 8, 362);
  add_cru(s2f, 27, 9, 363);
  add_cru(s2f, 27, 10, 364);
  add_cru(s2f, 27, 11, 365);
  add_cru(s2f, 28, 0, 216);
  add_cru(s2f, 28, 1, 217);
  add_cru(s2f, 28, 2, 218);
  add_cru(s2f, 28, 3, 219);
  add_cru(s2f, 28, 4, 220);
  add_cru(s2f, 28, 5, 221);
  add_cru(s2f, 29, 0, 432);
  add_cru(s2f, 29, 1, 433);
  add_cru(s2f, 29, 2, 434);
  add_cru(s2f, 29, 3, 435);
  add_cru(s2f, 29, 4, 436);
  add_cru(s2f, 29, 5, 437);
  add_cru(s2f, 29, 6, 408);
  add_cru(s2f, 29, 7, 409);
  add_cru(s2f, 29, 8, 410);
  add_cru(s2f, 29, 9, 411);
  add_cru(s2f, 29, 10, 412);
}