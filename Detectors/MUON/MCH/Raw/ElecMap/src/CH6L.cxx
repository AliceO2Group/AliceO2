// Copyright 2019-2020 CERN and copyright holders of ALICE O2.
// See https://alice-o2.web.cern.ch/copyright for details of the copyright holders.
// All rights not expressly granted are reserved.
//
// This software is distributed under the terms of the GNU General Public
// License v3 (GPL Version 3), copied verbatim in the file "COPYING".
//
// In applying this license CERN does not waive the privileges and immunities
// granted to it by virtue of its status as an Intergovernmental Organization
// or submit itself to any jurisdiction.

///
/// GENERATED CODE ! DO NOT EDIT !
///

#include "CH.cxx"
void fillElec2DetCH6L(std::map<uint32_t, uint32_t>& e2d)
{
  add(e2d, 605, 16, 312, 0, 0);
  add(e2d, 605, 15, 312, 0, 1);
  add(e2d, 605, 14, 312, 0, 2);
  add(e2d, 605, 13, 312, 0, 3);
  add(e2d, 605, 12, 312, 0, 4);
  add(e2d, 605, 8, 312, 2, 0);
  add(e2d, 605, 7, 312, 2, 1);
  add(e2d, 605, 6, 312, 2, 2);
  add(e2d, 605, 5, 312, 2, 3);
  add(e2d, 605, 4, 312, 2, 4);
  add(e2d, 605, 1033, 312, 4, 0);
  add(e2d, 605, 1034, 312, 4, 1);
  add(e2d, 605, 1035, 312, 4, 2);
  add(e2d, 605, 1025, 312, 6, 0);
  add(e2d, 605, 1026, 312, 6, 1);
  add(e2d, 605, 1027, 312, 6, 2);
  add(e2d, 605, 110, 312, 1, 0);
  add(e2d, 605, 111, 312, 1, 1);
  add(e2d, 605, 112, 312, 1, 2);
  add(e2d, 605, 113, 312, 1, 3);
  add(e2d, 605, 114, 312, 1, 4);
  add(e2d, 605, 101, 312, 3, 0);
  add(e2d, 605, 102, 312, 3, 1);
  add(e2d, 605, 103, 312, 3, 2);
  add(e2d, 605, 104, 312, 3, 3);
  add(e2d, 605, 105, 312, 3, 4);
  add(e2d, 605, 1142, 312, 5, 0);
  add(e2d, 605, 1141, 312, 5, 1);
  add(e2d, 605, 1140, 312, 5, 2);
  add(e2d, 605, 1139, 312, 5, 3);
  add(e2d, 605, 1133, 312, 7, 0);
  add(e2d, 605, 1132, 312, 7, 1);
  add(e2d, 605, 1131, 312, 7, 2);
  add(e2d, 605, 1130, 312, 7, 3);
  add(e2d, 606, 119, 313, 1, 0);
  add(e2d, 606, 120, 313, 1, 1);
  add(e2d, 606, 121, 313, 1, 2);
  add(e2d, 606, 122, 313, 1, 3);
  add(e2d, 606, 123, 313, 1, 4);
  add(e2d, 606, 110, 313, 3, 0);
  add(e2d, 606, 111, 313, 3, 1);
  add(e2d, 606, 112, 313, 3, 2);
  add(e2d, 606, 113, 313, 3, 3);
  add(e2d, 606, 114, 313, 3, 4);
  add(e2d, 606, 101, 313, 5, 0);
  add(e2d, 606, 102, 313, 5, 1);
  add(e2d, 606, 103, 313, 5, 2);
  add(e2d, 606, 104, 313, 5, 3);
  add(e2d, 606, 105, 313, 5, 4);
  add(e2d, 606, 1151, 313, 0, 0);
  add(e2d, 606, 1150, 313, 0, 1);
  add(e2d, 606, 1149, 313, 0, 2);
  add(e2d, 606, 1148, 313, 0, 3);
  add(e2d, 606, 1142, 313, 2, 0);
  add(e2d, 606, 1141, 313, 2, 1);
  add(e2d, 606, 1140, 313, 2, 2);
  add(e2d, 606, 1139, 313, 2, 3);
  add(e2d, 606, 1133, 313, 4, 0);
  add(e2d, 606, 1132, 313, 4, 1);
  add(e2d, 606, 1131, 313, 4, 2);
  add(e2d, 606, 1130, 313, 4, 3);
  add(e2d, 606, 24, 314, 1, 0);
  add(e2d, 606, 23, 314, 1, 1);
  add(e2d, 606, 22, 314, 1, 2);
  add(e2d, 606, 21, 314, 1, 3);
  add(e2d, 606, 20, 314, 1, 4);
  add(e2d, 606, 16, 314, 3, 0);
  add(e2d, 606, 15, 314, 3, 1);
  add(e2d, 606, 14, 314, 3, 2);
  add(e2d, 606, 13, 314, 3, 3);
  add(e2d, 606, 12, 314, 3, 4);
  add(e2d, 606, 8, 314, 5, 0);
  add(e2d, 606, 7, 314, 5, 1);
  add(e2d, 606, 6, 314, 5, 2);
  add(e2d, 606, 5, 314, 5, 3);
  add(e2d, 606, 4, 314, 5, 4);
  add(e2d, 606, 1041, 314, 0, 0);
  add(e2d, 606, 1042, 314, 0, 1);
  add(e2d, 606, 1043, 314, 0, 2);
  add(e2d, 606, 1033, 314, 2, 0);
  add(e2d, 606, 1034, 314, 2, 1);
  add(e2d, 606, 1035, 314, 2, 2);
  add(e2d, 606, 1025, 314, 4, 0);
  add(e2d, 606, 1026, 314, 4, 1);
  add(e2d, 606, 1027, 314, 4, 2);
  add(e2d, 607, 1039, 8, 0, 0);
  add(e2d, 607, 1040, 8, 0, 1);
  add(e2d, 607, 1041, 8, 0, 2);
  add(e2d, 607, 1035, 8, 2, 0);
  add(e2d, 607, 1036, 8, 2, 1);
  add(e2d, 607, 1037, 8, 2, 2);
  add(e2d, 607, 1038, 8, 2, 3);
  add(e2d, 607, 1141, 8, 4, 0);
  add(e2d, 607, 1142, 8, 4, 1);
  add(e2d, 607, 1143, 8, 4, 2);
  add(e2d, 607, 1133, 8, 1, 0);
  add(e2d, 607, 1134, 8, 1, 1);
  add(e2d, 607, 1135, 8, 1, 2);
  add(e2d, 607, 1125, 8, 3, 0);
  add(e2d, 607, 1126, 8, 3, 1);
  add(e2d, 607, 1127, 8, 3, 2);
  add(e2d, 607, 5, 9, 0, 0);
  add(e2d, 607, 4, 9, 0, 1);
  add(e2d, 607, 3, 9, 0, 2);
  add(e2d, 607, 2, 9, 0, 3);
  add(e2d, 607, 1, 9, 0, 4);
  add(e2d, 607, 10, 9, 2, 0);
  add(e2d, 607, 9, 9, 2, 1);
  add(e2d, 607, 8, 9, 2, 2);
  add(e2d, 607, 7, 9, 2, 3);
  add(e2d, 607, 6, 9, 2, 4);
  add(e2d, 607, 124, 9, 4, 0);
  add(e2d, 607, 123, 9, 4, 1);
  add(e2d, 607, 122, 9, 4, 2);
  add(e2d, 607, 121, 9, 4, 3);
  add(e2d, 607, 120, 9, 4, 4);
  add(e2d, 607, 116, 9, 1, 0);
  add(e2d, 607, 115, 9, 1, 1);
  add(e2d, 607, 114, 9, 1, 2);
  add(e2d, 607, 113, 9, 1, 3);
  add(e2d, 607, 112, 9, 1, 4);
  add(e2d, 607, 108, 9, 3, 0);
  add(e2d, 607, 107, 9, 3, 1);
  add(e2d, 607, 106, 9, 3, 2);
  add(e2d, 607, 105, 9, 3, 3);
  add(e2d, 607, 104, 9, 3, 4);
  add(e2d, 607, 1327, 10, 0, 0);
  add(e2d, 607, 1326, 10, 0, 1);
  add(e2d, 607, 1325, 10, 0, 2);
  add(e2d, 607, 1331, 10, 2, 0);
  add(e2d, 607, 1330, 10, 2, 1);
  add(e2d, 607, 1329, 10, 2, 2);
  add(e2d, 607, 1328, 10, 2, 3);
  add(e2d, 607, 1251, 10, 4, 0);
  add(e2d, 607, 1250, 10, 4, 1);
  add(e2d, 607, 1249, 10, 4, 2);
  add(e2d, 607, 1248, 10, 4, 3);
  add(e2d, 607, 1242, 10, 1, 0);
  add(e2d, 607, 1241, 10, 1, 1);
  add(e2d, 607, 1240, 10, 1, 2);
  add(e2d, 607, 1239, 10, 1, 3);
  add(e2d, 607, 1233, 10, 3, 0);
  add(e2d, 607, 1232, 10, 3, 1);
  add(e2d, 607, 1231, 10, 3, 2);
  add(e2d, 607, 1230, 10, 3, 3);
  add(e2d, 607, 313, 11, 0, 0);
  add(e2d, 607, 314, 11, 0, 1);
  add(e2d, 607, 315, 11, 0, 2);
  add(e2d, 607, 316, 11, 0, 3);
  add(e2d, 607, 317, 11, 0, 4);
  add(e2d, 607, 308, 11, 2, 0);
  add(e2d, 607, 309, 11, 2, 1);
  add(e2d, 607, 310, 11, 2, 2);
  add(e2d, 607, 311, 11, 2, 3);
  add(e2d, 607, 312, 11, 2, 4);
  add(e2d, 607, 219, 11, 4, 0);
  add(e2d, 607, 220, 11, 4, 1);
  add(e2d, 607, 221, 11, 4, 2);
  add(e2d, 607, 222, 11, 4, 3);
  add(e2d, 607, 223, 11, 4, 4);
  add(e2d, 607, 210, 11, 1, 0);
  add(e2d, 607, 211, 11, 1, 1);
  add(e2d, 607, 212, 11, 1, 2);
  add(e2d, 607, 213, 11, 1, 3);
  add(e2d, 607, 214, 11, 1, 4);
  add(e2d, 607, 201, 11, 3, 0);
  add(e2d, 607, 202, 11, 3, 1);
  add(e2d, 607, 203, 11, 3, 2);
  add(e2d, 607, 204, 11, 3, 3);
  add(e2d, 607, 205, 11, 3, 4);
  add(e2d, 608, 405, 12, 0, 0);
  add(e2d, 608, 404, 12, 0, 1);
  add(e2d, 608, 403, 12, 0, 2);
  add(e2d, 608, 402, 12, 0, 3);
  add(e2d, 608, 401, 12, 0, 4);
  add(e2d, 608, 410, 12, 2, 0);
  add(e2d, 608, 409, 12, 2, 1);
  add(e2d, 608, 408, 12, 2, 2);
  add(e2d, 608, 407, 12, 2, 3);
  add(e2d, 608, 406, 12, 2, 4);
  add(e2d, 608, 413, 12, 4, 0);
  add(e2d, 608, 412, 12, 4, 1);
  add(e2d, 608, 411, 12, 4, 2);
  add(e2d, 608, 228, 12, 6, 0);
  add(e2d, 608, 227, 12, 6, 1);
  add(e2d, 608, 226, 12, 6, 2);
  add(e2d, 608, 225, 12, 6, 3);
  add(e2d, 608, 224, 12, 6, 4);
  add(e2d, 608, 233, 12, 1, 0);
  add(e2d, 608, 232, 12, 1, 1);
  add(e2d, 608, 231, 12, 1, 2);
  add(e2d, 608, 230, 12, 1, 3);
  add(e2d, 608, 229, 12, 1, 4);
  add(e2d, 608, 216, 12, 3, 0);
  add(e2d, 608, 215, 12, 3, 1);
  add(e2d, 608, 214, 12, 3, 2);
  add(e2d, 608, 213, 12, 3, 3);
  add(e2d, 608, 212, 12, 3, 4);
  add(e2d, 608, 208, 12, 5, 0);
  add(e2d, 608, 207, 12, 5, 1);
  add(e2d, 608, 206, 12, 5, 2);
  add(e2d, 608, 205, 12, 5, 3);
  add(e2d, 608, 204, 12, 5, 4);
  add(e2d, 608, 1329, 13, 0, 0);
  add(e2d, 608, 1330, 13, 0, 1);
  add(e2d, 608, 1331, 13, 0, 2);
  add(e2d, 608, 1332, 13, 0, 3);
  add(e2d, 608, 1333, 13, 0, 4);
  add(e2d, 608, 1325, 13, 2, 0);
  add(e2d, 608, 1326, 13, 2, 1);
  add(e2d, 608, 1327, 13, 2, 2);
  add(e2d, 608, 1328, 13, 2, 3);
  add(e2d, 608, 1245, 13, 4, 0);
  add(e2d, 608, 1246, 13, 4, 1);
  add(e2d, 608, 1247, 13, 4, 2);
  add(e2d, 608, 1241, 13, 1, 0);
  add(e2d, 608, 1242, 13, 1, 1);
  add(e2d, 608, 1243, 13, 1, 2);
  add(e2d, 608, 1244, 13, 1, 3);
  add(e2d, 608, 1233, 13, 3, 0);
  add(e2d, 608, 1234, 13, 3, 1);
  add(e2d, 608, 1235, 13, 3, 2);
  add(e2d, 608, 1225, 13, 5, 0);
  add(e2d, 608, 1226, 13, 5, 1);
  add(e2d, 608, 1227, 13, 5, 2);
  add(e2d, 608, 4, 56, 0, 0);
  add(e2d, 608, 5, 56, 0, 1);
  add(e2d, 608, 6, 56, 0, 2);
  add(e2d, 608, 7, 56, 0, 3);
  add(e2d, 608, 124, 56, 2, 0);
  add(e2d, 608, 125, 56, 2, 1);
  add(e2d, 608, 126, 56, 2, 2);
  add(e2d, 608, 127, 56, 2, 3);
  add(e2d, 608, 128, 56, 2, 4);
  add(e2d, 608, 119, 56, 4, 0);
  add(e2d, 608, 120, 56, 4, 1);
  add(e2d, 608, 121, 56, 4, 2);
  add(e2d, 608, 122, 56, 4, 3);
  add(e2d, 608, 123, 56, 4, 4);
  add(e2d, 608, 110, 56, 1, 0);
  add(e2d, 608, 111, 56, 1, 1);
  add(e2d, 608, 112, 56, 1, 2);
  add(e2d, 608, 113, 56, 1, 3);
  add(e2d, 608, 114, 56, 1, 4);
  add(e2d, 608, 101, 56, 3, 0);
  add(e2d, 608, 102, 56, 3, 1);
  add(e2d, 608, 103, 56, 3, 2);
  add(e2d, 608, 104, 56, 3, 3);
  add(e2d, 608, 105, 56, 3, 4);
  add(e2d, 608, 1027, 57, 0, 0);
  add(e2d, 608, 1026, 57, 0, 1);
  add(e2d, 608, 1025, 57, 0, 2);
  add(e2d, 608, 1155, 57, 2, 0);
  add(e2d, 608, 1154, 57, 2, 1);
  add(e2d, 608, 1153, 57, 2, 2);
  add(e2d, 608, 1159, 57, 4, 0);
  add(e2d, 608, 1158, 57, 4, 1);
  add(e2d, 608, 1157, 57, 4, 2);
  add(e2d, 608, 1156, 57, 4, 3);
  add(e2d, 608, 1142, 57, 1, 0);
  add(e2d, 608, 1141, 57, 1, 1);
  add(e2d, 608, 1140, 57, 1, 2);
  add(e2d, 608, 1139, 57, 1, 3);
  add(e2d, 608, 1133, 57, 3, 0);
  add(e2d, 608, 1132, 57, 3, 1);
  add(e2d, 608, 1131, 57, 3, 2);
  add(e2d, 608, 1130, 57, 3, 3);
  add(e2d, 609, 3, 58, 0, 0);
  add(e2d, 609, 2, 58, 0, 1);
  add(e2d, 609, 1, 58, 0, 2);
  add(e2d, 609, 10, 58, 2, 0);
  add(e2d, 609, 9, 58, 2, 1);
  add(e2d, 609, 8, 58, 2, 2);
  add(e2d, 609, 7, 58, 2, 3);
  add(e2d, 609, 6, 58, 2, 4);
  add(e2d, 609, 15, 58, 4, 0);
  add(e2d, 609, 14, 58, 4, 1);
  add(e2d, 609, 13, 58, 4, 2);
  add(e2d, 609, 12, 58, 4, 3);
  add(e2d, 609, 11, 58, 4, 4);
  add(e2d, 609, 116, 58, 1, 0);
  add(e2d, 609, 115, 58, 1, 1);
  add(e2d, 609, 114, 58, 1, 2);
  add(e2d, 609, 113, 58, 1, 3);
  add(e2d, 609, 112, 58, 1, 4);
  add(e2d, 609, 108, 58, 3, 0);
  add(e2d, 609, 107, 58, 3, 1);
  add(e2d, 609, 106, 58, 3, 2);
  add(e2d, 609, 105, 58, 3, 3);
  add(e2d, 609, 104, 58, 3, 4);
  add(e2d, 609, 1028, 59, 0, 0);
  add(e2d, 609, 1029, 59, 0, 1);
  add(e2d, 609, 1044, 59, 2, 0);
  add(e2d, 609, 1045, 59, 2, 1);
  add(e2d, 609, 1046, 59, 2, 2);
  add(e2d, 609, 1040, 59, 4, 0);
  add(e2d, 609, 1041, 59, 4, 1);
  add(e2d, 609, 1042, 59, 4, 2);
  add(e2d, 609, 1043, 59, 4, 3);
  add(e2d, 609, 1133, 59, 1, 0);
  add(e2d, 609, 1134, 59, 1, 1);
  add(e2d, 609, 1135, 59, 1, 2);
  add(e2d, 609, 1125, 59, 3, 0);
  add(e2d, 609, 1126, 59, 3, 1);
  add(e2d, 609, 1127, 59, 3, 2);
  add(e2d, 609, 304, 60, 0, 0);
  add(e2d, 609, 305, 60, 0, 1);
  add(e2d, 609, 306, 60, 0, 2);
  add(e2d, 609, 307, 60, 0, 3);
  add(e2d, 609, 320, 60, 2, 0);
  add(e2d, 609, 321, 60, 2, 1);
  add(e2d, 609, 322, 60, 2, 2);
  add(e2d, 609, 323, 60, 2, 3);
  add(e2d, 609, 324, 60, 2, 4);
  add(e2d, 609, 315, 60, 4, 0);
  add(e2d, 609, 316, 60, 4, 1);
  add(e2d, 609, 317, 60, 4, 2);
  add(e2d, 609, 318, 60, 4, 3);
  add(e2d, 609, 319, 60, 4, 4);
  add(e2d, 609, 210, 60, 1, 0);
  add(e2d, 609, 211, 60, 1, 1);
  add(e2d, 609, 212, 60, 1, 2);
  add(e2d, 609, 213, 60, 1, 3);
  add(e2d, 609, 214, 60, 1, 4);
  add(e2d, 609, 201, 60, 3, 0);
  add(e2d, 609, 202, 60, 3, 1);
  add(e2d, 609, 203, 60, 3, 2);
  add(e2d, 609, 204, 60, 3, 3);
  add(e2d, 609, 205, 60, 3, 4);
  add(e2d, 609, 1327, 61, 0, 0);
  add(e2d, 609, 1326, 61, 0, 1);
  add(e2d, 609, 1325, 61, 0, 2);
  add(e2d, 609, 1334, 61, 2, 0);
  add(e2d, 609, 1333, 61, 2, 1);
  add(e2d, 609, 1332, 61, 2, 2);
  add(e2d, 609, 1338, 61, 4, 0);
  add(e2d, 609, 1337, 61, 4, 1);
  add(e2d, 609, 1336, 61, 4, 2);
  add(e2d, 609, 1335, 61, 4, 3);
  add(e2d, 609, 1242, 61, 1, 0);
  add(e2d, 609, 1241, 61, 1, 1);
  add(e2d, 609, 1240, 61, 1, 2);
  add(e2d, 609, 1239, 61, 1, 3);
  add(e2d, 609, 1233, 61, 3, 0);
  add(e2d, 609, 1232, 61, 3, 1);
  add(e2d, 609, 1231, 61, 3, 2);
  add(e2d, 609, 1230, 61, 3, 3);
  add(e2d, 610, 4, 32, 0, 0);
  add(e2d, 610, 5, 32, 0, 1);
  add(e2d, 610, 6, 32, 0, 2);
  add(e2d, 610, 7, 32, 0, 3);
  add(e2d, 610, 124, 32, 2, 0);
  add(e2d, 610, 125, 32, 2, 1);
  add(e2d, 610, 126, 32, 2, 2);
  add(e2d, 610, 127, 32, 2, 3);
  add(e2d, 610, 128, 32, 2, 4);
  add(e2d, 610, 119, 32, 4, 0);
  add(e2d, 610, 120, 32, 4, 1);
  add(e2d, 610, 121, 32, 4, 2);
  add(e2d, 610, 122, 32, 4, 3);
  add(e2d, 610, 123, 32, 4, 4);
  add(e2d, 610, 110, 32, 1, 0);
  add(e2d, 610, 111, 32, 1, 1);
  add(e2d, 610, 112, 32, 1, 2);
  add(e2d, 610, 113, 32, 1, 3);
  add(e2d, 610, 114, 32, 1, 4);
  add(e2d, 610, 101, 32, 3, 0);
  add(e2d, 610, 102, 32, 3, 1);
  add(e2d, 610, 103, 32, 3, 2);
  add(e2d, 610, 104, 32, 3, 3);
  add(e2d, 610, 105, 32, 3, 4);
  add(e2d, 610, 1027, 33, 0, 0);
  add(e2d, 610, 1026, 33, 0, 1);
  add(e2d, 610, 1025, 33, 0, 2);
  add(e2d, 610, 1155, 33, 2, 0);
  add(e2d, 610, 1154, 33, 2, 1);
  add(e2d, 610, 1153, 33, 2, 2);
  add(e2d, 610, 1159, 33, 4, 0);
  add(e2d, 610, 1158, 33, 4, 1);
  add(e2d, 610, 1157, 33, 4, 2);
  add(e2d, 610, 1156, 33, 4, 3);
  add(e2d, 610, 1142, 33, 1, 0);
  add(e2d, 610, 1141, 33, 1, 1);
  add(e2d, 610, 1140, 33, 1, 2);
  add(e2d, 610, 1139, 33, 1, 3);
  add(e2d, 610, 1133, 33, 3, 0);
  add(e2d, 610, 1132, 33, 3, 1);
  add(e2d, 610, 1131, 33, 3, 2);
  add(e2d, 610, 1130, 33, 3, 3);
  add(e2d, 610, 405, 34, 0, 0);
  add(e2d, 610, 404, 34, 0, 1);
  add(e2d, 610, 403, 34, 0, 2);
  add(e2d, 610, 402, 34, 0, 3);
  add(e2d, 610, 401, 34, 0, 4);
  add(e2d, 610, 410, 34, 2, 0);
  add(e2d, 610, 409, 34, 2, 1);
  add(e2d, 610, 408, 34, 2, 2);
  add(e2d, 610, 407, 34, 2, 3);
  add(e2d, 610, 406, 34, 2, 4);
  add(e2d, 610, 413, 34, 4, 0);
  add(e2d, 610, 412, 34, 4, 1);
  add(e2d, 610, 411, 34, 4, 2);
  add(e2d, 610, 228, 34, 6, 0);
  add(e2d, 610, 227, 34, 6, 1);
  add(e2d, 610, 226, 34, 6, 2);
  add(e2d, 610, 225, 34, 6, 3);
  add(e2d, 610, 224, 34, 6, 4);
  add(e2d, 610, 233, 34, 1, 0);
  add(e2d, 610, 232, 34, 1, 1);
  add(e2d, 610, 231, 34, 1, 2);
  add(e2d, 610, 230, 34, 1, 3);
  add(e2d, 610, 229, 34, 1, 4);
  add(e2d, 610, 216, 34, 3, 0);
  add(e2d, 610, 215, 34, 3, 1);
  add(e2d, 610, 214, 34, 3, 2);
  add(e2d, 610, 213, 34, 3, 3);
  add(e2d, 610, 212, 34, 3, 4);
  add(e2d, 610, 208, 34, 5, 0);
  add(e2d, 610, 207, 34, 5, 1);
  add(e2d, 610, 206, 34, 5, 2);
  add(e2d, 610, 205, 34, 5, 3);
  add(e2d, 610, 204, 34, 5, 4);
  add(e2d, 610, 1329, 35, 0, 0);
  add(e2d, 610, 1330, 35, 0, 1);
  add(e2d, 610, 1331, 35, 0, 2);
  add(e2d, 610, 1332, 35, 0, 3);
  add(e2d, 610, 1333, 35, 0, 4);
  add(e2d, 610, 1325, 35, 2, 0);
  add(e2d, 610, 1326, 35, 2, 1);
  add(e2d, 610, 1327, 35, 2, 2);
  add(e2d, 610, 1328, 35, 2, 3);
  add(e2d, 610, 1245, 35, 4, 0);
  add(e2d, 610, 1246, 35, 4, 1);
  add(e2d, 610, 1247, 35, 4, 2);
  add(e2d, 610, 1241, 35, 1, 0);
  add(e2d, 610, 1242, 35, 1, 1);
  add(e2d, 610, 1243, 35, 1, 2);
  add(e2d, 610, 1244, 35, 1, 3);
  add(e2d, 610, 1233, 35, 3, 0);
  add(e2d, 610, 1234, 35, 3, 1);
  add(e2d, 610, 1235, 35, 3, 2);
  add(e2d, 610, 1225, 35, 5, 0);
  add(e2d, 610, 1226, 35, 5, 1);
  add(e2d, 610, 1227, 35, 5, 2);
  add(e2d, 611, 5, 36, 0, 0);
  add(e2d, 611, 4, 36, 0, 1);
  add(e2d, 611, 3, 36, 0, 2);
  add(e2d, 611, 2, 36, 0, 3);
  add(e2d, 611, 1, 36, 0, 4);
  add(e2d, 611, 10, 36, 2, 0);
  add(e2d, 611, 9, 36, 2, 1);
  add(e2d, 611, 8, 36, 2, 2);
  add(e2d, 611, 7, 36, 2, 3);
  add(e2d, 611, 6, 36, 2, 4);
  add(e2d, 611, 124, 36, 4, 0);
  add(e2d, 611, 123, 36, 4, 1);
  add(e2d, 611, 122, 36, 4, 2);
  add(e2d, 611, 121, 36, 4, 3);
  add(e2d, 611, 120, 36, 4, 4);
  add(e2d, 611, 116, 36, 1, 0);
  add(e2d, 611, 115, 36, 1, 1);
  add(e2d, 611, 114, 36, 1, 2);
  add(e2d, 611, 113, 36, 1, 3);
  add(e2d, 611, 112, 36, 1, 4);
  add(e2d, 611, 108, 36, 3, 0);
  add(e2d, 611, 107, 36, 3, 1);
  add(e2d, 611, 106, 36, 3, 2);
  add(e2d, 611, 105, 36, 3, 3);
  add(e2d, 611, 104, 36, 3, 4);
  add(e2d, 611, 1039, 37, 0, 0);
  add(e2d, 611, 1040, 37, 0, 1);
  add(e2d, 611, 1041, 37, 0, 2);
  add(e2d, 611, 1035, 37, 2, 0);
  add(e2d, 611, 1036, 37, 2, 1);
  add(e2d, 611, 1037, 37, 2, 2);
  add(e2d, 611, 1038, 37, 2, 3);
  add(e2d, 611, 1141, 37, 4, 0);
  add(e2d, 611, 1142, 37, 4, 1);
  add(e2d, 611, 1143, 37, 4, 2);
  add(e2d, 611, 1133, 37, 1, 0);
  add(e2d, 611, 1134, 37, 1, 1);
  add(e2d, 611, 1135, 37, 1, 2);
  add(e2d, 611, 1125, 37, 3, 0);
  add(e2d, 611, 1126, 37, 3, 1);
  add(e2d, 611, 1127, 37, 3, 2);
  add(e2d, 611, 313, 24, 0, 0);
  add(e2d, 611, 314, 24, 0, 1);
  add(e2d, 611, 315, 24, 0, 2);
  add(e2d, 611, 316, 24, 0, 3);
  add(e2d, 611, 317, 24, 0, 4);
  add(e2d, 611, 308, 24, 2, 0);
  add(e2d, 611, 309, 24, 2, 1);
  add(e2d, 611, 310, 24, 2, 2);
  add(e2d, 611, 311, 24, 2, 3);
  add(e2d, 611, 312, 24, 2, 4);
  add(e2d, 611, 219, 24, 4, 0);
  add(e2d, 611, 220, 24, 4, 1);
  add(e2d, 611, 221, 24, 4, 2);
  add(e2d, 611, 222, 24, 4, 3);
  add(e2d, 611, 223, 24, 4, 4);
  add(e2d, 611, 210, 24, 1, 0);
  add(e2d, 611, 211, 24, 1, 1);
  add(e2d, 611, 212, 24, 1, 2);
  add(e2d, 611, 213, 24, 1, 3);
  add(e2d, 611, 214, 24, 1, 4);
  add(e2d, 611, 201, 24, 3, 0);
  add(e2d, 611, 202, 24, 3, 1);
  add(e2d, 611, 203, 24, 3, 2);
  add(e2d, 611, 204, 24, 3, 3);
  add(e2d, 611, 205, 24, 3, 4);
  add(e2d, 611, 1327, 25, 0, 0);
  add(e2d, 611, 1326, 25, 0, 1);
  add(e2d, 611, 1325, 25, 0, 2);
  add(e2d, 611, 1331, 25, 2, 0);
  add(e2d, 611, 1330, 25, 2, 1);
  add(e2d, 611, 1329, 25, 2, 2);
  add(e2d, 611, 1328, 25, 2, 3);
  add(e2d, 611, 1251, 25, 4, 0);
  add(e2d, 611, 1250, 25, 4, 1);
  add(e2d, 611, 1249, 25, 4, 2);
  add(e2d, 611, 1248, 25, 4, 3);
  add(e2d, 611, 1242, 25, 1, 0);
  add(e2d, 611, 1241, 25, 1, 1);
  add(e2d, 611, 1240, 25, 1, 2);
  add(e2d, 611, 1239, 25, 1, 3);
  add(e2d, 611, 1233, 25, 3, 0);
  add(e2d, 611, 1232, 25, 3, 1);
  add(e2d, 611, 1231, 25, 3, 2);
  add(e2d, 611, 1230, 25, 3, 3);
  add(e2d, 612, 119, 26, 1, 0);
  add(e2d, 612, 120, 26, 1, 1);
  add(e2d, 612, 121, 26, 1, 2);
  add(e2d, 612, 122, 26, 1, 3);
  add(e2d, 612, 123, 26, 1, 4);
  add(e2d, 612, 110, 26, 3, 0);
  add(e2d, 612, 111, 26, 3, 1);
  add(e2d, 612, 112, 26, 3, 2);
  add(e2d, 612, 113, 26, 3, 3);
  add(e2d, 612, 114, 26, 3, 4);
  add(e2d, 612, 101, 26, 5, 0);
  add(e2d, 612, 102, 26, 5, 1);
  add(e2d, 612, 103, 26, 5, 2);
  add(e2d, 612, 104, 26, 5, 3);
  add(e2d, 612, 105, 26, 5, 4);
  add(e2d, 612, 1151, 26, 0, 0);
  add(e2d, 612, 1150, 26, 0, 1);
  add(e2d, 612, 1149, 26, 0, 2);
  add(e2d, 612, 1148, 26, 0, 3);
  add(e2d, 612, 1142, 26, 2, 0);
  add(e2d, 612, 1141, 26, 2, 1);
  add(e2d, 612, 1140, 26, 2, 2);
  add(e2d, 612, 1139, 26, 2, 3);
  add(e2d, 612, 1133, 26, 4, 0);
  add(e2d, 612, 1132, 26, 4, 1);
  add(e2d, 612, 1131, 26, 4, 2);
  add(e2d, 612, 1130, 26, 4, 3);
  add(e2d, 612, 24, 27, 1, 0);
  add(e2d, 612, 23, 27, 1, 1);
  add(e2d, 612, 22, 27, 1, 2);
  add(e2d, 612, 21, 27, 1, 3);
  add(e2d, 612, 20, 27, 1, 4);
  add(e2d, 612, 16, 27, 3, 0);
  add(e2d, 612, 15, 27, 3, 1);
  add(e2d, 612, 14, 27, 3, 2);
  add(e2d, 612, 13, 27, 3, 3);
  add(e2d, 612, 12, 27, 3, 4);
  add(e2d, 612, 8, 27, 5, 0);
  add(e2d, 612, 7, 27, 5, 1);
  add(e2d, 612, 6, 27, 5, 2);
  add(e2d, 612, 5, 27, 5, 3);
  add(e2d, 612, 4, 27, 5, 4);
  add(e2d, 612, 1041, 27, 0, 0);
  add(e2d, 612, 1042, 27, 0, 1);
  add(e2d, 612, 1043, 27, 0, 2);
  add(e2d, 612, 1033, 27, 2, 0);
  add(e2d, 612, 1034, 27, 2, 1);
  add(e2d, 612, 1035, 27, 2, 2);
  add(e2d, 612, 1025, 27, 4, 0);
  add(e2d, 612, 1026, 27, 4, 1);
  add(e2d, 612, 1027, 27, 4, 2);
  add(e2d, 613, 16, 28, 0, 0);
  add(e2d, 613, 15, 28, 0, 1);
  add(e2d, 613, 14, 28, 0, 2);
  add(e2d, 613, 13, 28, 0, 3);
  add(e2d, 613, 12, 28, 0, 4);
  add(e2d, 613, 8, 28, 2, 0);
  add(e2d, 613, 7, 28, 2, 1);
  add(e2d, 613, 6, 28, 2, 2);
  add(e2d, 613, 5, 28, 2, 3);
  add(e2d, 613, 4, 28, 2, 4);
  add(e2d, 613, 1033, 28, 4, 0);
  add(e2d, 613, 1034, 28, 4, 1);
  add(e2d, 613, 1035, 28, 4, 2);
  add(e2d, 613, 1025, 28, 6, 0);
  add(e2d, 613, 1026, 28, 6, 1);
  add(e2d, 613, 1027, 28, 6, 2);
  add(e2d, 613, 110, 28, 1, 0);
  add(e2d, 613, 111, 28, 1, 1);
  add(e2d, 613, 112, 28, 1, 2);
  add(e2d, 613, 113, 28, 1, 3);
  add(e2d, 613, 114, 28, 1, 4);
  add(e2d, 613, 101, 28, 3, 0);
  add(e2d, 613, 102, 28, 3, 1);
  add(e2d, 613, 103, 28, 3, 2);
  add(e2d, 613, 104, 28, 3, 3);
  add(e2d, 613, 105, 28, 3, 4);
  add(e2d, 613, 1142, 28, 5, 0);
  add(e2d, 613, 1141, 28, 5, 1);
  add(e2d, 613, 1140, 28, 5, 2);
  add(e2d, 613, 1139, 28, 5, 3);
  add(e2d, 613, 1133, 28, 7, 0);
  add(e2d, 613, 1132, 28, 7, 1);
  add(e2d, 613, 1131, 28, 7, 2);
  add(e2d, 613, 1130, 28, 7, 3);
}
void fillSolar2FeeLinkCH6L(std::map<uint16_t, uint32_t>& s2f)
{
  add_cru(s2f, 24, 0, 312);
  add_cru(s2f, 24, 1, 313);
  add_cru(s2f, 24, 2, 314);
  add_cru(s2f, 24, 6, 8);
  add_cru(s2f, 24, 7, 9);
  add_cru(s2f, 24, 8, 10);
  add_cru(s2f, 24, 9, 11);
  add_cru(s2f, 24, 10, 12);
  add_cru(s2f, 24, 11, 13);
  add_cru(s2f, 25, 0, 56);
  add_cru(s2f, 25, 1, 57);
  add_cru(s2f, 25, 2, 58);
  add_cru(s2f, 25, 3, 59);
  add_cru(s2f, 25, 4, 60);
  add_cru(s2f, 25, 5, 61);
  add_cru(s2f, 26, 0, 32);
  add_cru(s2f, 26, 1, 33);
  add_cru(s2f, 26, 2, 34);
  add_cru(s2f, 26, 3, 35);
  add_cru(s2f, 26, 4, 36);
  add_cru(s2f, 26, 5, 37);
  add_cru(s2f, 26, 6, 24);
  add_cru(s2f, 26, 7, 25);
  add_cru(s2f, 26, 8, 26);
  add_cru(s2f, 26, 9, 27);
  add_cru(s2f, 26, 10, 28);
}