// Copyright CERN and copyright holders of ALICE O2. This software is
// distributed under the terms of the GNU General Public License v3 (GPL
// Version 3), copied verbatim in the file "COPYING".
//
// See http://alice-o2.web.cern.ch/license for full licensing information.
//
// In applying this license CERN does not waive the privileges and immunities
// granted to it by virtue of its status as an Intergovernmental Organization
// or submit itself to any jurisdiction.

#ifndef ALICEO2_NAME_GENERATOR_H_
#define ALICEO2_NAME_GENERATOR_H_

#include "DetectorsCommonDataFormats/DetID.h"
#include "SimConfig/ConfigurableParam.h"
#include "SimConfig/ConfigurableParamHelper.h"
#include "CommonUtils/StringUtils.h"
#include <string_view>

/// \file NameConf.h
/// \brief Definition of the Names Generator class

namespace o2
{
namespace base
{
// class for book-keeping of the names for output files and trees

class NameConf : public o2::conf::ConfigurableParamHelper<NameConf>
{

 public:
  // The Hits file name are generated by hardcoded schema, only prefix is mutable to allow the embedding
  std::string getHitsFileName(o2::detectors::DetID d, const std::string_view prefix = DefSimFileNamePrefix) const
  {
    return o2::utils::concat_string(prefix, HitsFileName, d.getName(), ".root");
  }

  // The Digits file name are generated by hardcoded schema, only prefix is mutable to allow the embedding
  std::string getDigitsFileName(o2::detectors::DetID d, const std::string_view prefix = DefSimFileNamePrefix) const
  {
    return o2::utils::concat_string(prefix, DigitsFileName, d.getName(), ".root");
  }

  // Filename to store kinematics + TrackRefs
  std::string getGRPFileName(const std::string_view prefix = DefSimFileNamePrefix) const
  {
    return o2::utils::concat_string(prefix, GRPFileName, ".root");
  }

  // Filename to store kinematics + TrackRefs
  std::string getMCTruthFileName(const std::string_view prefix = DefSimFileNamePrefix) const
  {
    return o2::utils::concat_string(prefix, mMCTruthFileName, ".root");
  }

 private:
  static constexpr std::string_view DefSimFileNamePrefix = "o2sim";
  static constexpr std::string_view HitsFileName = "Hits";     // hardcoded
  static constexpr std::string_view DigitsFileName = "Digits"; // hardcoded
  static constexpr std::string_view GRPFileName = "GRP";       // hardcoded

  std::string mMCTruthFileName = "MCTruth";

  O2ParamDef(NameConf, "NameConf");
};

} // namespace base
} // namespace o2

#endif
