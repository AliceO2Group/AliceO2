diff --git a/Detectors/TPC/reconstruction/include/TPCReconstruction/ClustererTask.h b/Detectors/TPC/reconstruction/include/TPCReconstruction/ClustererTask.h
index 4e829e32d..b878d6e8b 100644
--- a/Detectors/TPC/reconstruction/include/TPCReconstruction/ClustererTask.h
+++ b/Detectors/TPC/reconstruction/include/TPCReconstruction/ClustererTask.h
@@ -34,8 +34,8 @@ namespace TPC{
 class ClustererTask : public FairTask{
 
   using MCLabelContainer = o2::dataformats::MCTruthContainer<o2::MCCompLabel>;
-  //  using OutputType          = Cluster;
-  using OutputType = ClusterHardwareContainer8kb;
+  using OutputType          = Cluster;
+  //using OutputType = ClusterHardwareContainer8kb;
 
  public:
   /// Default constructor
diff --git a/Detectors/TPC/reconstruction/src/ClustererTask.cxx b/Detectors/TPC/reconstruction/src/ClustererTask.cxx
index 78c65030a..bd75b1f79 100644
--- a/Detectors/TPC/reconstruction/src/ClustererTask.cxx
+++ b/Detectors/TPC/reconstruction/src/ClustererTask.cxx
@@ -108,6 +108,23 @@ void ClustererTask::Exec(Option_t *option)
   LOG(DEBUG) << "Hw clusterer delivered " << mHwClustersArray->size() << " cluster container" << FairLogger::endl
              << FairLogger::endl;
 
+  LOG(DEBUG) << ">> WRITE TO DEBUG FILE <<" << FairLogger::endl;
+  std::ofstream clusterOut;
+  clusterOut.open("clusters.txt", std::ios_base::app);
+  clusterOut << "currentEvent = " << mEventCount << std::endl;
+  for (Cluster c : *mHwClustersArray) {
+    clusterOut << "Cluster: "
+        << "cru = " << c.getCRU() << ", "
+        << "row = " << c.getRow() << ", "
+        << "Q = " << c.getQ() << ", "
+        << "Qmax = " << c.getQmax() << ", "
+        << "padMean = " << c.getPadMean() << ", "
+        << "timeMean = " << c.getTimeMean() << ", "
+        << "padSigma = " << c.getPadSigma() << ", "
+        << "timeSigma = " << c.getTimeSigma() << std::endl;
+  }
+
+
   ++mEventCount;
 }
 
diff --git a/Detectors/TPC/simulation/src/DigitizerTask.cxx b/Detectors/TPC/simulation/src/DigitizerTask.cxx
index 565e2b809..0f17cbce0 100644
--- a/Detectors/TPC/simulation/src/DigitizerTask.cxx
+++ b/Detectors/TPC/simulation/src/DigitizerTask.cxx
@@ -143,6 +143,21 @@ void DigitizerTask::Exec(Option_t* option)
   mDigitContainer = mDigitizer->Process(Sector(mHitSector), *mSectorHitsArrayRight, mgr->GetEntryNr(), eventTime);
   mDigitContainer->fillOutputContainer(mDigitsArray, *mMCTruthArray, mDigitsDebugArray, eventTimeBin,
                                        mIsContinuousReadout);
+
+  LOG(DEBUG) << ">> WRITE TO DEBUG FILE <<" << FairLogger::endl;
+  std::ofstream digitOut;
+  digitOut.open("digits.txt", std::ios_base::app);
+  digitOut << "currentEvent = " << mCurrentEvent-1 << std::endl;
+  for (Digit d : *mDigitsArray) {
+    digitOut << "Digit: "
+        << "charge = " << d.getChargeFloat() << ", "
+        << "cru = " << d.getCRU() << ", "
+        << "row = " << d.getRow() << ", "
+        << "pad = " << d.getPad() << ", "
+        << "time = " << d.getTimeStamp() << std::endl;
+  }
+
+
 }
 
 void DigitizerTask::Exec2(Option_t* option)
diff --git a/macro/run_sim_tpc.C b/macro/run_sim_tpc.C
index 0ed4d2eeb..1f69f3385 100644
--- a/macro/run_sim_tpc.C
+++ b/macro/run_sim_tpc.C
@@ -80,7 +80,7 @@ void run_sim_tpc(Int_t nEvents = 10, TString mcEngine = "TGeant3")
   // Create PrimaryGenerator
   FairPrimaryGenerator* primGen = new FairPrimaryGenerator();
 #ifdef BOX_GENERATOR
-  FairBoxGenerator* boxGen = new FairBoxGenerator(211, 10); /*protons*/
+  FairBoxGenerator* boxGen = new FairBoxGenerator(211, 1000); /*protons*/
 
   //boxGen->SetThetaRange(0.0, 90.0);
   boxGen->SetEtaRange(-0.9,0.9);
